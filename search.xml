<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Dart学习</title>
    <url>/2023/09/22/Dart%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="（一）Duration-是有正负之分"><a href="#（一）Duration-是有正负之分" class="headerlink" title="（一）Duration 是有正负之分"></a>（一）Duration 是有正负之分</h2><h3 id="1、获取常用的参数："><a href="#1、获取常用的参数：" class="headerlink" title="1、获取常用的参数："></a>1、获取常用的参数：</h3><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;Test/Test.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Duration类型的使用demo</span></span><br><span class="line">main() &#123;</span><br><span class="line">   <span class="comment">//定义一个Duration</span></span><br><span class="line">   <span class="built_in">Duration</span> stim = <span class="built_in">Duration</span>(</span><br><span class="line">       days: <span class="number">0</span>, hours: <span class="number">1</span>, minutes: <span class="number">0</span>,</span><br><span class="line">       seconds: <span class="number">30</span>, milliseconds: <span class="number">000</span>, microseconds: <span class="number">00</span></span><br><span class="line">   );</span><br><span class="line">   <span class="comment">//常用操作</span></span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;获取天数值：<span class="subst">$&#123;stim.inDays&#125;</span>&quot;</span>); <span class="comment">//获取days的值：0</span></span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;获取总的秒数值:<span class="subst">$&#123;stim.inSeconds&#125;</span>&quot;</span>); <span class="comment">//返回总的秒数，整个时间转换为秒数</span></span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;获取小时数值：<span class="subst">$&#123;stim.inMinutes&#125;</span>&quot;</span>); <span class="comment">//只会返回小时的值，小时后面的分钟会被忽略</span></span><br><span class="line">   <span class="built_in">print</span>(stim.toString()); <span class="comment">//转换为字符串</span></span><br><span class="line">   <span class="built_in">print</span>(stim.isNegative); <span class="comment">//返回此“Duration”是否为负</span></span><br><span class="line">   <span class="built_in">print</span>(stim.abs()); <span class="comment">//获取Duration绝对值:abs()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>2、比较两个 Duration 类型的大小，可以应用于比较两个视频的时间长短等等。</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;Test/Test.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">   <span class="comment">//定义一个Duration</span></span><br><span class="line">   <span class="built_in">Duration</span> stim = <span class="built_in">Duration</span>(</span><br><span class="line">       days: <span class="number">0</span>, hours: <span class="number">1</span>, minutes: <span class="number">0</span>,</span><br><span class="line">       seconds: <span class="number">30</span>, milliseconds: <span class="number">000</span>, microseconds: <span class="number">00</span></span><br><span class="line">   );</span><br><span class="line">    <span class="comment">//定义一个Duration</span></span><br><span class="line">   <span class="built_in">Duration</span> stim1=<span class="built_in">Duration</span>(</span><br><span class="line">      days: <span class="number">0</span>,hours: <span class="number">0</span>,minutes: <span class="number">0</span>, seconds:<span class="number">30</span>,milliseconds: <span class="number">000</span>,microseconds: <span class="number">00</span></span><br><span class="line">   );</span><br><span class="line">   <span class="comment">//将stim与stim1比较，等于则返回0，大于返回1，小于返回-1</span></span><br><span class="line">   <span class="built_in">print</span>(stim.compareTo(stim1));  <span class="comment">//结果：1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="3、Duration-类型的常用比较，如两个-Duration-相加，相减等。"><a href="#3、Duration-类型的常用比较，如两个-Duration-相加，相减等。" class="headerlink" title="3、Duration 类型的常用比较，如两个 Duration 相加，相减等。"></a>3、Duration 类型的常用比较，如两个 Duration 相加，相减等。</h3><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;Test/Test.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Duration类型的使用demo</span></span><br><span class="line">main() &#123;</span><br><span class="line">   <span class="comment">//定义一个Duration</span></span><br><span class="line">   <span class="built_in">Duration</span> stim = <span class="built_in">Duration</span>(</span><br><span class="line">       days: <span class="number">0</span>, hours: <span class="number">0</span>, minutes: <span class="number">0</span>,</span><br><span class="line">       seconds: <span class="number">30</span>, milliseconds: <span class="number">000</span>, microseconds: <span class="number">00</span></span><br><span class="line">   );</span><br><span class="line">   <span class="comment">//定义一个Duration</span></span><br><span class="line">    <span class="built_in">Duration</span> stim1=<span class="built_in">Duration</span>(</span><br><span class="line">      days: <span class="number">0</span>,hours: <span class="number">0</span>,minutes: <span class="number">0</span>, seconds:<span class="number">30</span>,milliseconds: <span class="number">000</span>,microseconds: <span class="number">00</span></span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   <span class="built_in">print</span>(stim+stim1); <span class="comment">//两个Duration相加，结果：0:01:00.000000</span></span><br><span class="line">   <span class="built_in">print</span>(stim-stim1); <span class="comment">//两个Duration相减，结果：0:00:00.000000</span></span><br><span class="line">   <span class="built_in">print</span>(stim*<span class="number">2</span>); <span class="comment">//乘 ,结果：0:01:00.000000</span></span><br><span class="line">   <span class="built_in">print</span>(stim ~/<span class="number">100</span>); <span class="comment">//除，注意有个波浪号~,结果：0:00:00.003000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="4、Duration-类型截取指定部份显示。"><a href="#4、Duration-类型截取指定部份显示。" class="headerlink" title="4、Duration 类型截取指定部份显示。"></a>4、Duration 类型截取指定部份显示。</h3><p>通过上面的示例不难看出一个问题就是 Duration 显示的时间跨度是带有小数点的，如（0:01:00.000000）。而且显示的是小数点后面 6 位，在实际的应用中，我们只需要显示时:分: 秒的格式（如：0:01:30）。或者像视频进度条里显示的格式（01:30）。那么如何实现这种效果呢？实现方式如下</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"> 获取<span class="built_in">Duration</span>--&gt;转为字符串--&gt;利用字符串的截取方法截取指定的位置字符串。</span><br><span class="line">     <span class="comment">//Duration类型的使用demo</span></span><br><span class="line">main() &#123;</span><br><span class="line">   <span class="comment">//定义一个Duration</span></span><br><span class="line">   <span class="built_in">Duration</span> stim = <span class="built_in">Duration</span>(</span><br><span class="line">       days: <span class="number">0</span>, hours: <span class="number">0</span>, minutes: <span class="number">60</span>, seconds: <span class="number">30</span>, milliseconds: <span class="number">40</span>, microseconds: <span class="number">50</span></span><br><span class="line">   );</span><br><span class="line">   <span class="built_in">print</span>(stim); <span class="comment">//结果：1:00:30.040050</span></span><br><span class="line">   <span class="built_in">String</span> str=stim.toString(); <span class="comment">//原始数据转为字符串</span></span><br><span class="line">   <span class="built_in">print</span>(str.substring(<span class="number">2</span>,<span class="number">7</span>)); <span class="comment">//截取指定位置的数据，结果：00:30</span></span><br><span class="line">   <span class="built_in">print</span>(str.substring(<span class="number">0</span>,<span class="number">7</span>)); <span class="comment">//截取指定位置的数据，结果：1:00:30</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="（二）Timer-定时器"><a href="#（二）Timer-定时器" class="headerlink" title="（二）Timer 定时器"></a>（二）Timer 定时器</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Timer(</span><br><span class="line">    <span class="built_in">Duration</span> duration,</span><br><span class="line">    <span class="keyword">void</span> callback()</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<h3 id="构造方法："><a href="#构造方法：" class="headerlink" title="构造方法："></a>构造方法：</h3><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> timeout = <span class="keyword">const</span> <span class="built_in">Duration</span>(seconds: <span class="number">5</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;currentTime =&#x27;</span>+<span class="built_in">DateTime</span>.now().toString());</span><br><span class="line">Timer(timeout, () &#123;</span><br><span class="line">    <span class="comment">//5秒后执行</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;after 5s Time =&#x27;</span>+<span class="built_in">DateTime</span>.now().toString());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p><strong>Timer.periodic</strong>执行多次回调：<br>回调多次的定时器用法和回调一次的差不多，区别有下面两点：<br>1、API 调用不同<br>2、需要手动取消，否则会一直回调，因为是周期性的</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">z`t count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> period = <span class="keyword">const</span> <span class="built_in">Duration</span>(seconds: <span class="number">1</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;currentTime=&#x27;</span>+<span class="built_in">DateTime</span>.now().toString());</span><br><span class="line">Timer.periodic(period, (timer) &#123;</span><br><span class="line">  <span class="comment">//到时回调</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;afterTimer=&#x27;</span>+<span class="built_in">DateTime</span>.now().toString());</span><br><span class="line">  count++;</span><br><span class="line">  <span class="keyword">if</span> (count &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="comment">//取消定时器，避免无限回调</span></span><br><span class="line">    timer.cancel();</span><br><span class="line">    timer = <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="built_in">int</span> count = <span class="number">0</span>;</span><br><span class="line">  Timer timer;</span><br><span class="line">  Timer.periodic(<span class="built_in">Duration</span>(seconds: <span class="number">1</span>), (timer) &#123;</span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">5</span>) &#123;</span><br><span class="line">      timer.cancel();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="built_in">print</span>(count);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="（三）时间转换"><a href="#（三）时间转换" class="headerlink" title="（三）时间转换"></a>（三）时间转换</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">///<span class="language-markdown">时间转换：</span></span></span><br><span class="line"><span class="keyword">void</span> transformTime(<span class="built_in">int</span> times) &#123;</span><br><span class="line">  <span class="built_in">int</span> date = <span class="number">0</span>, hour = <span class="number">0</span>, minute = <span class="number">0</span>, second = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (times &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    date = times ~/ <span class="number">86400</span>;</span><br><span class="line">    hour = ((times - <span class="number">86400</span> * date) ~/ <span class="number">3600</span>);</span><br><span class="line">    minute = (times - <span class="number">86400</span> * date - hour * <span class="number">3600</span>) ~/ <span class="number">60</span>;</span><br><span class="line">    second =</span><br><span class="line">        ((times - <span class="number">86400</span> * date - hour * <span class="number">3600</span> - minute * <span class="number">60</span>) % <span class="number">60</span>).toInt();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (times &lt; <span class="number">60</span>) &#123;</span><br><span class="line">    timer = times &lt; <span class="number">10</span> ? (<span class="string">&#x27;00:&#x27;</span> + <span class="string">&#x27;0<span class="subst">$&#123;second&#125;</span>&#x27;</span>) : (<span class="string">&#x27;00:&#x27;</span> + <span class="string">&#x27;<span class="subst">$&#123;second&#125;</span>&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (times &gt; <span class="number">3600</span>) &#123;</span><br><span class="line">    timer = <span class="string">&#x27;<span class="subst">$&#123;hour&#125;</span>:&#x27;</span> + <span class="string">&#x27;<span class="subst">$&#123;minute&#125;</span>:&#x27;</span> + <span class="string">&#x27;<span class="subst">$&#123;second&#125;</span>&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="（四）字符串"><a href="#（四）字符串" class="headerlink" title="（四）字符串"></a>（四）字符串</h2><p><a class="link"   href="https://blog.csdn.net/qq_42351033/article/details/120721078?spm=1001.2014.3001.5502" >Dart 的 String 字符串的常用方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>Dart</tag>
      </tags>
  </entry>
  <entry>
    <title>Dart小记</title>
    <url>/2023/09/22/Dart%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="泛型方法："><a href="#泛型方法：" class="headerlink" title="泛型方法："></a>泛型方法：</h2><ul>
<li>dart 的泛型方法书写和 Java 的不太一样。</li>
</ul>
<ol>
<li>Dart 的泛型方法</li>
</ol>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">T first&lt;T&gt;(<span class="built_in">List</span>&lt;T&gt; ts) &#123;</span><br><span class="line">  <span class="comment">// 进行一些初始工作或错误检查，然后...</span></span><br><span class="line">  T tmp = ts[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">// 进行一些额外的检查或处理...</span></span><br><span class="line">  <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


  <div class="note-large default">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <i class="notel-icon fa-solid fa-info"></i><p>Tips</p>

    </div>
    <div class="notel-content">
      <p><T> 表示这是一个泛型方法，T 是类型参数的名称，</p>

    </div>
  </div>

<ol start="2">
<li>Java 的泛型方法</li>
</ol>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">&lt;T&gt; T first(<span class="built_in">List</span>&lt;T&gt; ts) &#123;</span><br><span class="line"><span class="comment">// 进行一些初始工作或错误检查，然后...</span></span><br><span class="line">T tmp = ts.<span class="keyword">get</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 进行一些额外的检查或处理...</span></span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line">&lt;T&gt; 位于方法返回类型之前，表示这是一个泛型方法，T 是类型参数的名称，可以替换成其他合法的标识符。</span><br></pre></td></tr></table></figure></div>

<h2 id="Mixin-混入"><a href="#Mixin-混入" class="headerlink" title="Mixin(混入)"></a>Mixin(混入)</h2>
  <div class="note-large default">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <i class="notel-icon fa-solid fa-info"></i><p>Tips</p>

    </div>
    <div class="notel-content">
      <p>作用：解决无需多重继承即可拥有功能方法<br>混合使用 with 关键字，with 后面可以是 class、abstract class 和 mixin 的类型</p>

    </div>
  </div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// mixin 声明的类</span></span><br><span class="line"><span class="keyword">mixin</span> a &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span> <span class="title">with</span> <span class="title">a</span>, <span class="title">b</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>混入（with）多类，遇到同名方法的情况，按照混入的顺序，后面的会覆盖前面</li>
<li>mixin 的类无法定义构造函数，所以一般会将需要 mixin 的类使用 mixin 关键字</li>
<li>使用关键字 on 限定混入条件</li>
</ul>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">eat()&#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;eat&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">使用关键字 on 限定 Code 只能被 Person 或者其子类 mixin</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">添加限定后，可以重写其方法， Code 重写 Person 的方法</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">super 表示调用父类（Person）的方法。</span></span></span><br><span class="line"><span class="keyword">mixin</span> Code <span class="keyword">on</span> Person &#123;</span><br><span class="line"><span class="meta">@override</span></span><br><span class="line">eat()&#123;</span><br><span class="line"><span class="keyword">super</span>.eat();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>混合后的类型是超类的子类型(类似多继承)</li>
</ul>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">G</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">H</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FG</span> <span class="keyword">extends</span> <span class="title">H</span> <span class="title">with</span> <span class="title">F</span>,<span class="title">G</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">FG fg = FG();</span><br><span class="line">/_</span><br><span class="line">fg <span class="keyword">is</span> F: <span class="keyword">true</span></span><br><span class="line">fg <span class="keyword">is</span> G: <span class="keyword">true</span></span><br><span class="line">fg <span class="keyword">is</span> H: <span class="keyword">true</span></span><br><span class="line">_/</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul>
<li>调用非默认超类构造函数</li>
</ul>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="built_in">String?</span> firstName;</span><br><span class="line"></span><br><span class="line">Person.fromJson(<span class="built_in">Map</span> data) &#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;in Person&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="comment">// Person does not have a default constructor;</span></span><br><span class="line"><span class="comment">// you must call super.fromJson().</span></span><br><span class="line">Employee.fromJson(<span class="keyword">super</span>.data) : <span class="keyword">super</span>.fromJson() &#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;in Employee&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line"><span class="keyword">var</span> employee = Employee.fromJson(&#123;&#125;);</span><br><span class="line"><span class="built_in">print</span>(employee);</span><br><span class="line"><span class="comment">// Prints:</span></span><br><span class="line"><span class="comment">// in Person</span></span><br><span class="line"><span class="comment">// in Employee</span></span><br><span class="line"><span class="comment">// Instance of &#x27;Employee&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vector2d</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">double</span> x;</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">double</span> y;</span><br><span class="line"></span><br><span class="line">Vector2d(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vector3d</span> <span class="keyword">extends</span> <span class="title">Vector2d</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">double</span> z;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Forward the x and y parameters to the default super constructor like:</span></span><br><span class="line"><span class="comment">// Vector3d(final double x, final double y, this.z) : super(x, y);</span></span><br><span class="line">Vector3d(<span class="keyword">super</span>.x, <span class="keyword">super</span>.y, <span class="keyword">this</span>.z);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Dart</category>
      </categories>
      <tags>
        <tag>Dart</tag>
        <tag>小记</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 内购实现</title>
    <url>/2023/09/22/Flutter/Flutter-%E5%86%85%E8%B4%AD%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:in_app_purchase_storekit/in_app_purchase_storekit.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:in_app_purchase_storekit/store_kit_wrappers.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:in_app_purchase/in_app_purchase.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">适用于ios端的内购处理方法</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InAppPurchaseUtils</span> </span>&#123;</span><br><span class="line">  <span class="keyword">late</span> <span class="keyword">final</span> InAppPurchase _inAppPurchase;</span><br><span class="line">  <span class="keyword">late</span> StreamSubscription&lt;<span class="built_in">List</span>&lt;PurchaseDetails&gt;&gt; _subscription;</span><br><span class="line">  <span class="keyword">late</span> <span class="keyword">final</span> Stream&lt;<span class="built_in">List</span>&lt;PurchaseDetails&gt;&gt; purchaseUpdated;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">产品id</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; productIds = [];</span><br><span class="line">  <span class="built_in">List</span>&lt;ProductDetails&gt; _products = &lt;ProductDetails&gt;[];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">初始化</span></span></span><br><span class="line">  InAppPurchaseUtils.init() &#123;</span><br><span class="line">    _inAppPurchase = InAppPurchase.instance;</span><br><span class="line">    purchaseUpdated = _inAppPurchase.purchaseStream;</span><br><span class="line">    initStoreInfo();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">查询产品信息</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">返回的数据类型是ProductDetailsResponse</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">获取详细的产品数据：productDetailResponse.productDetails</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">Example:</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">if (productDetailResponse.error != null) &#123;</span></span></span><br><span class="line">  <span class="comment">//       setState(() &#123;</span></span><br><span class="line">  <span class="comment">//         _queryProductError = productDetailResponse.error!.message;</span></span><br><span class="line">  <span class="comment">//         _isAvailable = isAvailable;</span></span><br><span class="line">  <span class="comment">//         _products = productDetailResponse.productDetails;</span></span><br><span class="line">  <span class="comment">//         _purchases = &lt;PurchaseDetails&gt;[];</span></span><br><span class="line">  <span class="comment">//         _notFoundIds = productDetailResponse.notFoundIDs;</span></span><br><span class="line">  <span class="comment">//         _consumables = &lt;String&gt;[];</span></span><br><span class="line">  <span class="comment">//         _purchasePending = false;</span></span><br><span class="line">  <span class="comment">//         _loading = false;</span></span><br><span class="line">  <span class="comment">//       &#125;);</span></span><br><span class="line">  <span class="comment">//       return;</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  Future&lt;ProductDetailsResponse&gt; queryProductDetails() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> _inAppPurchase.queryProductDetails(productIds.toSet());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">List</span>&lt;ProductDetails&gt; <span class="keyword">get</span> products =&gt; _products;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">初始化商品（ios端，未集成Android）</span></span></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; initStoreInfo() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">await</span> isAvailable) &#123;</span><br><span class="line">      <span class="keyword">if</span> (Platform.isIOS) &#123;</span><br><span class="line">        <span class="keyword">final</span> InAppPurchaseStoreKitPlatformAddition iosPlatformAddition =</span><br><span class="line">        _inAppPurchase</span><br><span class="line">            .getPlatformAddition&lt;InAppPurchaseStoreKitPlatformAddition&gt;();</span><br><span class="line">        <span class="keyword">await</span> iosPlatformAddition.setDelegate(ExamplePaymentQueueDelegate());</span><br><span class="line">      &#125;</span><br><span class="line">      queryProductDetails().then((value) &#123;</span><br><span class="line">        <span class="keyword">if</span>(value.error != <span class="keyword">null</span>) &#123;</span><br><span class="line">          _products = value.productDetails;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">内购监听</span></span></span><br><span class="line">  <span class="keyword">void</span> addPurchaseListener(&#123;<span class="keyword">required</span> PurchaseListener listener, ValueChanged? onError&#125;) &#123;</span><br><span class="line">    _subscription = purchaseUpdated.listen((<span class="built_in">List</span>&lt;PurchaseDetails&gt; purchaseDetailsList) &#123;</span><br><span class="line">      _listenToPurchaseUpdated(purchaseDetailsList, listener: listener);</span><br><span class="line">    &#125;,onDone: ()&#123;</span><br><span class="line">      _subscription.cancel();</span><br><span class="line">    &#125;,onError: (<span class="built_in">Object</span> err)&#123;</span><br><span class="line">      <span class="keyword">if</span>(onError != <span class="keyword">null</span>) onError(err);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">购买消耗产品（金币）</span></span></span><br><span class="line">  <span class="keyword">void</span> buyConsumable(ProductDetails productDetails)&#123;</span><br><span class="line">    <span class="keyword">if</span>(Platform.isIOS) &#123;</span><br><span class="line">      _inAppPurchase.buyConsumable(purchaseParam: PurchaseParam(productDetails: productDetails));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">订阅</span></span></span><br><span class="line">  <span class="keyword">void</span> buyNonConsumable(ProductDetails productDetails)&#123;</span><br><span class="line">    <span class="keyword">if</span>(Platform.isIOS) &#123;</span><br><span class="line">      _inAppPurchase.buyNonConsumable(purchaseParam: PurchaseParam(productDetails: productDetails));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">处理内购</span></span></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _listenToPurchaseUpdated(</span><br><span class="line">      <span class="built_in">List</span>&lt;PurchaseDetails&gt; purchaseDetailsList, &#123;<span class="keyword">required</span> PurchaseListener listener&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">final</span> PurchaseDetails purchaseDetails <span class="keyword">in</span> purchaseDetailsList) &#123;</span><br><span class="line">      <span class="keyword">if</span> (purchaseDetails.status == PurchaseStatus.pending) &#123;</span><br><span class="line">        <span class="keyword">if</span>(listener.onPending != <span class="keyword">null</span>) listener.onPending!();</span><br><span class="line">        <span class="comment">// showPendingUI();</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(listener.onPendingComplete != <span class="keyword">null</span>) listener.onPendingComplete!();</span><br><span class="line">        <span class="keyword">if</span> (purchaseDetails.status == PurchaseStatus.error) &#123;</span><br><span class="line">          <span class="keyword">if</span>(listener.onError != <span class="keyword">null</span>) listener.onError!(purchaseDetails.error);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (purchaseDetails.status == PurchaseStatus.purchased ||</span><br><span class="line">            purchaseDetails.status == PurchaseStatus.restored) &#123;</span><br><span class="line">          listener.onPurchased(purchaseDetails);</span><br><span class="line">          <span class="comment">// final bool valid = await _verifyPurchase(purchaseDetails);</span></span><br><span class="line">          <span class="comment">// if (valid) &#123;</span></span><br><span class="line">          <span class="comment">//   deliverProduct(purchaseDetails);</span></span><br><span class="line">          <span class="comment">// &#125; else &#123;</span></span><br><span class="line">          <span class="comment">//   _handleInvalidPurchase(purchaseDetails);</span></span><br><span class="line">          <span class="comment">//   return;</span></span><br><span class="line">          <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if (Platform.isAndroid) &#123;</span></span><br><span class="line">        <span class="comment">//   if (!_kAutoConsume &amp;&amp; purchaseDetails.productID == _kConsumableId) &#123;</span></span><br><span class="line">        <span class="comment">//     final InAppPurchaseAndroidPlatformAddition androidAddition =</span></span><br><span class="line">        <span class="comment">//     _inAppPurchase.getPlatformAddition&lt;</span></span><br><span class="line">        <span class="comment">//         InAppPurchaseAndroidPlatformAddition&gt;();</span></span><br><span class="line">        <span class="comment">//     await androidAddition.consumePurchase(purchaseDetails);</span></span><br><span class="line">        <span class="comment">//   &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">if</span> (purchaseDetails.pendingCompletePurchase) &#123;</span><br><span class="line">          <span class="keyword">await</span> _inAppPurchase.completePurchase(purchaseDetails);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">内购服务是否可用</span></span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; <span class="keyword">get</span> isAvailable <span class="keyword">async</span> =&gt; <span class="keyword">await</span> _inAppPurchase.isAvailable();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">取消内购服务监听</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">dispose 时可调用</span></span></span><br><span class="line">  <span class="keyword">void</span> cancel()&#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isIOS) &#123;</span><br><span class="line">      <span class="keyword">final</span> InAppPurchaseStoreKitPlatformAddition iosPlatformAddition =</span><br><span class="line">      _inAppPurchase</span><br><span class="line">          .getPlatformAddition&lt;InAppPurchaseStoreKitPlatformAddition&gt;();</span><br><span class="line">      iosPlatformAddition.setDelegate(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    _subscription.cancel();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PurchaseListener</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">等待</span></span></span><br><span class="line">  VoidCallback? onPending;</span><br><span class="line">  ValueChanged? onError;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">购买事件</span></span></span><br><span class="line">  <span class="keyword">late</span> ValueChanged&lt;PurchaseDetails&gt; onPurchased;</span><br><span class="line">  <span class="comment">///<span class="language-markdown">等待结束</span></span></span><br><span class="line">  VoidCallback? onPendingComplete;</span><br><span class="line">  PurchaseListener(&#123;<span class="keyword">required</span> <span class="keyword">this</span>.onPurchased,<span class="keyword">this</span>.onPending,<span class="keyword">this</span>.onError,<span class="keyword">this</span>.onPendingComplete&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExamplePaymentQueueDelegate</span> <span class="keyword">implements</span> <span class="title">SKPaymentQueueDelegateWrapper</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> shouldContinueTransaction(</span><br><span class="line">      SKPaymentTransactionWrapper transaction, SKStorefrontWrapper storefront) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> shouldShowPriceConsent() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>in_app_purchase</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 进阶</title>
    <url>/2023/09/22/Flutter/Flutter-%E8%BF%9B%E9%98%B6/</url>
    <content><![CDATA[<h2 id="1-provider"><a href="#1-provider" class="headerlink" title="1.provider"></a>1.provider</h2><p><a class="link"   href="https://blog.csdn.net/lpfasd123/article/details/101573980" >https://blog.csdn.net/lpfasd123/article/details/101573980 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="2-InheritedWidget"><a href="#2-InheritedWidget" class="headerlink" title="2.InheritedWidget"></a>2.InheritedWidget</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="3-provider"><a href="#3-provider" class="headerlink" title="3.provider"></a>3.provider</h2><p>Provider，Google 官方推荐的一种 Flutter 页面状态管理组件，它的实质其实就是对 InheritedWidget 的包装，使它们更易于使用和重用。</p>
<ul>
<li><p><strong>创建一个 ChangeNotifier</strong></p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model1</span> <span class="keyword">extends</span> <span class="title">ChangeNotifier</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> _count = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">int</span> <span class="keyword">get</span> value =&gt; _count;</span><br><span class="line">  <span class="keyword">set</span> value(<span class="built_in">int</span> value) &#123;</span><br><span class="line">    _count = value;</span><br><span class="line">    notifyListeners();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>创建一个 ChangeNotifier（方式一）</strong></p>
<p>这里通过 ChangeNotifierProvider 的 create 把 ChangeNotifier（即 Model1）建立联系，作用域的范围在 child 指定的 MaterialApp，这里我们将 SingleStatsView 作为首页，SingleStatsView 里面使用了 Model1 作为数据源。需要注意的是，不要把所有状态的作用域都放在 MaterialApp，根据实际业务需求严格控制作用域范围，全局状态多了会严重影响应用的性能。</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> ChangeNotifierProvider(</span><br><span class="line">      create: (context) &#123;</span><br><span class="line">        <span class="keyword">return</span> Model1();</span><br><span class="line">      &#125;,</span><br><span class="line">      child: MaterialApp(</span><br><span class="line">        theme: ArchSampleTheme.theme,</span><br><span class="line">        home: SingleStatsView(),</span><br><span class="line">      ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingleStatsView</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Center(</span><br><span class="line">      child: Column(</span><br><span class="line">        mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          FlatButton(</span><br><span class="line">            color: Colors.blue,</span><br><span class="line">            child: Text(<span class="string">&#x27;Model1 count++&#x27;</span>),</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              Provider.of&lt;Model1&gt;(context, listen: <span class="keyword">false</span>).count++;</span><br><span class="line">            &#125;,</span><br><span class="line">          ),</span><br><span class="line">          Padding(</span><br><span class="line">            padding: <span class="keyword">const</span> EdgeInsets.only(bottom: <span class="number">8.0</span>),</span><br><span class="line">            child: Text(<span class="string">&#x27;Model count值变化监听&#x27;</span>,</span><br><span class="line">                style: Theme.of(context).textTheme.title),</span><br><span class="line">          ),</span><br><span class="line">          Padding(</span><br><span class="line">            padding: <span class="keyword">const</span> EdgeInsets.only(bottom: <span class="number">8.0</span>),</span><br><span class="line">            child: Text(<span class="string">&#x27;Model1 count:<span class="subst">$&#123;Provider.of&lt;Model1&gt;(context).count&#125;</span>&#x27;</span>,</span><br><span class="line">                style: Theme.of(context)</span><br><span class="line">                    .textTheme</span><br><span class="line">                    .subhead</span><br><span class="line">                    .copyWith(color: Colors.green)),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>创建一个 ChangeNotifierProvider.value（方式二）</strong></p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> ChangeNotifierProvider.value(</span><br><span class="line">        value: Model1(),</span><br><span class="line">        child: MaterialApp(</span><br><span class="line">          theme: ArchSampleTheme.theme,</span><br><span class="line">          home: SingleStatsView(),</span><br><span class="line">     ));</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>在页面中监听状态变更，其他使用方式</strong></p>
<p>ValueListenableBuilder</p>
</li>
</ul>
<h1 id="Stream-的相关案例"><a href="#Stream-的相关案例" class="headerlink" title="Stream 的相关案例"></a>Stream 的相关案例</h1><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataBloc</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> DataBloc() =&gt; _instance;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> DataBloc _instance = DataBloc._init();</span><br><span class="line"></span><br><span class="line">   <span class="comment">///<span class="language-markdown">定义一个Controller</span></span></span><br><span class="line">  StreamController&lt;<span class="built_in">String</span>&gt; _dataController = StreamController.broadcast(</span><br><span class="line">    onListen: ()&#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;databloc listen&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    onCancel: ()&#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;databloc cancel&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">  <span class="comment">///<span class="language-markdown">获取 StreamSink 做 add 入口</span></span></span><br><span class="line">  StreamSink&lt;<span class="built_in">String</span>&gt; <span class="keyword">get</span> dataSink =&gt; _dataController.sink;</span><br><span class="line">  <span class="comment">///<span class="language-markdown">获取 Stream 用于监听</span></span></span><br><span class="line">  Stream&lt;<span class="built_in">String</span>&gt; <span class="keyword">get</span> dataStream =&gt; _dataController.stream;</span><br><span class="line">  <span class="comment">///<span class="language-markdown">事件订阅对象</span></span></span><br><span class="line">  <span class="keyword">late</span> StreamSubscription _dataSubscription;</span><br><span class="line"></span><br><span class="line">  DataBloc._init() &#123;</span><br><span class="line">    <span class="comment">///<span class="language-markdown">监听事件</span></span></span><br><span class="line">    _dataSubscription = dataStream.listen((value)&#123;</span><br><span class="line">      <span class="comment">///<span class="language-markdown">do change</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  close() &#123;</span><br><span class="line">    <span class="comment">///<span class="language-markdown">关闭</span></span></span><br><span class="line">    _dataSubscription.cancel();</span><br><span class="line">    _dataController.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:logger/logger.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:amap_flutter_location/amap_flutter_location.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:amap_flutter_location/amap_location_option.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> logger = Logger(</span><br><span class="line">  printer: PrettyPrinter(methodCount: <span class="number">1</span>, printEmojis: <span class="keyword">false</span>, colors: <span class="keyword">false</span>),</span><br><span class="line">);</span><br><span class="line"><span class="comment">/// <span class="language-markdown">基于定位设计的Bloc</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LocationBloc</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">实现单例模式</span></span></span><br><span class="line">  <span class="keyword">factory</span> LocationBloc() =&gt; _instance;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> LocationBloc _instance = LocationBloc._init();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// static LocationBloc get instance =&gt; _instance;</span></span><br><span class="line"></span><br><span class="line">  LocationBloc._init() &#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isIOS) &#123;</span><br><span class="line">      _requestAccuracyAuthorization();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">///<span class="language-markdown">监听事件</span></span></span><br><span class="line">    _dataSubscription = _locationPlugin.onLocationChanged().listen((<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;? result) &#123;</span><br><span class="line">        _dataController.sink.add(result);</span><br><span class="line">    &#125;);</span><br><span class="line">    _startLocation();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> AMapFlutterLocation _locationPlugin = <span class="keyword">new</span> AMapFlutterLocation();</span><br><span class="line">  <span class="comment">///<span class="language-markdown">定义一个Controller</span></span></span><br><span class="line">  StreamController&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;?&gt; _dataController = StreamController.broadcast();</span><br><span class="line">  <span class="comment">///<span class="language-markdown">获取 StreamSink 做 add 入口</span></span></span><br><span class="line">  <span class="comment">// StreamSink&lt;List&lt;String&gt;&gt; get _dataSink =&gt; _dataController.sink;</span></span><br><span class="line">  <span class="comment">///<span class="language-markdown">获取 Stream 用于监听</span></span></span><br><span class="line">  Stream&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;?&gt; <span class="keyword">get</span> dataStream =&gt; _dataController.stream;</span><br><span class="line">  <span class="comment">///<span class="language-markdown">事件订阅对象</span></span></span><br><span class="line">  <span class="keyword">late</span> StreamSubscription _dataSubscription;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">设置定位参数</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> _setLocationOption() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != _locationPlugin) &#123;</span><br><span class="line">      AMapLocationOption locationOption = <span class="keyword">new</span> AMapLocationOption();</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown">是否单次定位</span></span></span><br><span class="line">      locationOption.onceLocation = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown">是否需要返回逆地理信息</span></span></span><br><span class="line">      locationOption.needAddress = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown">逆地理信息的语言类型</span></span></span><br><span class="line">      locationOption.geoLanguage = GeoLanguage.DEFAULT;</span><br><span class="line"></span><br><span class="line">      locationOption.desiredLocationAccuracyAuthorizationMode =</span><br><span class="line">          AMapLocationAccuracyAuthorizationMode.ReduceAccuracy;</span><br><span class="line"></span><br><span class="line">      locationOption.fullAccuracyPurposeKey = <span class="string">&quot;AMapLocationScene&quot;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown">设置Android端连续定位的定位间隔(源码里面默认应该是2秒)</span></span></span><br><span class="line">      locationOption.locationInterval = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown">设置Android端的定位模式<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line">      <span class="comment">///<span class="language-markdown">可选值：<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[AMapLocationMode.Battery<span class="emphasis">_Saving]<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[AMapLocationMode.Device_</span>Sensors]<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[AMapLocationMode.Hight<span class="emphasis">_Accuracy]<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      locationOption.locationMode = AMapLocationMode.Hight_Accuracy;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis">设置iOS端的定位最小更新距离<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span></span><br><span class="line">      locationOption.distanceFilter = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis">设置iOS端期望的定位精度</span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis">可选值：<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[DesiredAccuracy.Best] 最高精度<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[DesiredAccuracy.BestForNavigation] 适用于导航场景的高精度 <span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[DesiredAccuracy.NearestTenMeters] 10米 <span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[DesiredAccuracy.Kilometer] 1000米<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      <span class="comment">/// <span class="language-markdown"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span>[DesiredAccuracy.ThreeKilometers] 3000米<span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span></span></span><br><span class="line">      locationOption.desiredAccuracy = DesiredAccuracy.Best;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis">设置iOS端是否允许系统暂停定位</span></span></span></span><br><span class="line">      locationOption.pausesLocationUpdatesAutomatically = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis">将定位参数设置给定位插件</span></span></span></span><br><span class="line">      _locationPlugin.setLocationOption(locationOption);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown"><span class="emphasis">获取iOS native的accuracyAuthorization类型</span></span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> _requestAccuracyAuthorization() <span class="keyword">async</span> &#123;</span><br><span class="line">    AMapAccuracyAuthorization currentAccuracyAuthorization =</span><br><span class="line">    <span class="keyword">await</span> _locationPlugin.getSystemAccuracyAuthorization();</span><br><span class="line">    <span class="keyword">if</span> (currentAccuracyAuthorization ==</span><br><span class="line">        AMapAccuracyAuthorization.AMapAccuracyAuthorizationFullAccuracy) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;精确定位类型&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentAccuracyAuthorization ==</span><br><span class="line">        AMapAccuracyAuthorization.AMapAccuracyAuthorizationReducedAccuracy) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;模糊定位类型&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;未知定位类型&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown"><span class="emphasis">开始定位</span></span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> _startLocation() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != _locationPlugin) &#123;</span><br><span class="line">      <span class="comment">///<span class="language-markdown"><span class="emphasis">开始定位之前设置定位参数</span></span></span></span><br><span class="line">      _setLocationOption();</span><br><span class="line">      _locationPlugin.startLocation();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  close() &#123;</span><br><span class="line">    <span class="comment">///<span class="language-markdown"><span class="emphasis">关闭</span></span></span></span><br><span class="line">    logger.d(<span class="string">&#x27;移除定位订阅&#x27;</span>);</span><br><span class="line">    _dataSubscription.cancel();</span><br><span class="line">    _dataController.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>文章：<a class="link"   href="https://cloud.tencent.com/developer/article/1511980" >https://cloud.tencent.com/developer/article/1511980 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://cloud.tencent.com/developer/article/1610790" >https://cloud.tencent.com/developer/article/1610790 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StateSubject</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">final</span> StateSubject _instance = StateSubject._();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> StateSubject() =&gt; StateSubject._instance;</span><br><span class="line"></span><br><span class="line">  StreamController&lt;<span class="built_in">int</span>&gt; streamController;</span><br><span class="line"></span><br><span class="line">  StateSubject._() &#123;</span><br><span class="line">    streamController = StreamController.broadcast();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> update(<span class="built_in">int</span> <span class="built_in">num</span>) &#123;</span><br><span class="line">    streamController.sink.add(<span class="built_in">num</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="Flutter-ios-设置中文语言"><a href="#Flutter-ios-设置中文语言" class="headerlink" title="Flutter ios 设置中文语言"></a>Flutter ios 设置中文语言</h1><p>1、先把手机的语言模式设置成简体中文</p>
<p>2、在 Info.Plist 里面把 Localization native development region 字段修改成 China</p>
<p>3、在 Info.Plist 里面添加字段 Localized resources can be mixed（Boolean）值为 YES</p>
<p>方法都设置好了后，打开相机调用的还是英文</p>
<p>还要在项目的 PROJECT -&gt; Info -&gt; Localizations 中添加语言包才可以<br>————————————————<br>版权声明：本文为 CSDN 博主「moon 清泉」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a class="link"   href="https://blog.csdn.net/MoonAndroid/article/details/121625582" >https://blog.csdn.net/MoonAndroid/article/details/121625582 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/09/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Welcome-to"><a href="#Welcome-to" class="headerlink" title="Welcome to!"></a>Welcome to!</h2><p>This is my blog, sharing somthing interesting with you.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Flutter State-01</title>
    <url>/2023/09/13/Flutter/Flutter_state_01/</url>
    <content><![CDATA[
  <div class="note-large default">
    <div class="notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center">
      <i class="notel-icon fa-solid fa-info"></i><p>参考</p>

    </div>
    <div class="notel-content">
      <p><a class="link"   href="https://www.bilibili.com/video/BV11p4y157ar/?spm_id_from=333.999.0.0" >王叔 FLutter 状态管理篇 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://www.yuque.com/jshao-n4geo/umd53l/lo1z4549vr6tseey" >语雀的个人草稿笔记 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>

    </div>
  </div>

<h2 id="自定义-Provider"><a href="#自定义-Provider" class="headerlink" title="自定义 Provider"></a>自定义 Provider</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomProvider</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Listenable</span>&gt; <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> T <span class="built_in">Function</span>() create;</span><br><span class="line">  <span class="keyword">final</span> Widget child;</span><br><span class="line">  <span class="keyword">const</span> CustomProvider(&#123;Key? key, <span class="keyword">required</span> <span class="keyword">this</span>.child, <span class="keyword">required</span> <span class="keyword">this</span>.create&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;CustomProvider&gt; createState() =&gt; _CustomState&lt;T&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> T of&lt;T&gt;(BuildContext context,&#123;<span class="built_in">bool</span> listen = <span class="keyword">true</span>&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span>(listen) &#123;</span><br><span class="line">      <span class="keyword">return</span> context.dependOnInheritedWidgetOfExactType&lt;CustomInheritedWidget&lt;T&gt;&gt;()!.model;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> (context.getElementForInheritedWidgetOfExactType&lt;CustomInheritedWidget&lt;T&gt;&gt;()!.widget <span class="keyword">as</span> CustomInheritedWidget).model;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CustomState</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Listenable</span>&gt; <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">CustomProvider</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">late</span> T model;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    model = widget.create();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> AnimatedBuilder(</span><br><span class="line">      animation: model,</span><br><span class="line">      builder: (BuildContext context, Widget? child) &#123;</span><br><span class="line">        <span class="keyword">return</span> CustomInheritedWidget(model: model,</span><br><span class="line">            child: widget.child);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomInheritedWidget</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">InheritedWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> T model;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> CustomInheritedWidget(&#123;<span class="keyword">super</span>.key, <span class="keyword">required</span> <span class="keyword">this</span>.model,<span class="keyword">required</span> <span class="keyword">super</span>.child&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> CustomInheritedWidget of&lt;T&gt;(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> context.dependOnInheritedWidgetOfExactType&lt;CustomInheritedWidget&lt;T&gt;&gt;()!;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> updateShouldNotify(<span class="keyword">covariant</span> InheritedWidget oldWidget) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;update&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">extension如果没有取名字只能在本文件中使用，属于私有扩展。起名字可以供其他外部使用</span></span></span><br><span class="line"><span class="keyword">extension</span> Consumer <span class="keyword">on</span> BuildContext &#123;</span><br><span class="line">  T watch&lt;T&gt;() =&gt; CustomProvider.of(<span class="keyword">this</span>);</span><br><span class="line">  T read&lt;T&gt;() =&gt; CustomProvider.of(<span class="keyword">this</span>,listen: <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>状态管理</tag>
      </tags>
  </entry>
  <entry>
    <title>稀有组件</title>
    <url>/2023/09/22/Flutter/%E7%A8%80%E6%9C%89%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="InteractiveViewer"><a href="#InteractiveViewer" class="headerlink" title="InteractiveViewer"></a>InteractiveViewer</h2><p>A widget that enables pan and zoom interactions with its child.</p>
<p><a class="link"   href="https://api.flutter.dev/flutter/widgets/InteractiveViewer-class.html" >Document <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter常用组件</title>
    <url>/2023/09/22/Flutter/Flutter%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="1-圆角按钮"><a href="#1-圆角按钮" class="headerlink" title="1.圆角按钮"></a>1.圆角按钮</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">TextButton(</span><br><span class="line">    onPressed: ()&#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;取消订单&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    style: TextButton.styleFrom(</span><br><span class="line">        padding: EdgeInsets.zero,</span><br><span class="line">        shape: RoundedRectangleBorder(</span><br><span class="line">            borderRadius: BorderRadius.circular(<span class="number">16.0</span>),</span><br><span class="line">            side: BorderSide(width: <span class="number">1.0</span>, color: Color(<span class="number">0xFFC4C8CC</span>)) <span class="comment">/// <span class="language-markdown">外边框</span></span></span><br><span class="line">        ),</span><br><span class="line">        minimumSize: Size.zero</span><br><span class="line">    ),</span><br><span class="line">    child: Container(</span><br><span class="line">      padding: EdgeInsets.symmetric(horizontal: <span class="number">18.0</span>, vertical: <span class="number">5.0</span>),</span><br><span class="line">      child: Text(<span class="string">&#x27;取消订单&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFA8ADB3</span>), fontSize: <span class="number">12.0</span>)),</span><br><span class="line">    )</span><br><span class="line">),</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">ClipRRect(</span><br><span class="line">  borderRadius: BorderRadius.circular(<span class="number">16.5</span>),</span><br><span class="line">  child: ElevatedButton(</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line">      Nav.push((context) =&gt; CheckoutCounter());</span><br><span class="line">    &#125;,</span><br><span class="line">    style: ButtonStyle(</span><br><span class="line">      textStyle: MaterialStateProperty.all(TextStyle(fontSize: <span class="number">12.0</span>)),</span><br><span class="line">      backgroundColor: MaterialStateProperty.all(Color(<span class="number">0xFF3F5AFF</span>)),</span><br><span class="line">      padding: MaterialStateProperty.all(EdgeInsets.symmetric(vertical: <span class="number">8.0</span>, horizontal: <span class="number">26.0</span>))</span><br><span class="line">    ),</span><br><span class="line">    child: Text(<span class="string">&quot;提交订单&quot;</span>),</span><br><span class="line">  ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<h2 id="2-Text"><a href="#2-Text" class="headerlink" title="2.Text"></a>2.Text</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Text(<span class="string">&#x27;待发货&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFF223359</span>), fontSize: <span class="number">14.0</span>)),</span><br></pre></td></tr></table></figure></div>

<h2 id="3-圆形-Container"><a href="#3-圆形-Container" class="headerlink" title="3.圆形 Container"></a>3.圆形 Container</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Container(</span><br><span class="line">      height: <span class="number">200</span>,</span><br><span class="line">      width: <span class="number">200</span>,</span><br><span class="line">      decoration: BoxDecoration(</span><br><span class="line">        image: DecorationImage(</span><br><span class="line">          image: NetworkImage(</span><br><span class="line">              <span class="string">&#x27;https://flutter.github.io/assets-for-api-docs/assets/widgets/owl-2.jpg&#x27;</span>),</span><br><span class="line">          fit: BoxFit.cover,</span><br><span class="line">        ),</span><br><span class="line">        border: Border.all(</span><br><span class="line">          color: Colors.blue,</span><br><span class="line">          width: <span class="number">2</span>,</span><br><span class="line">        ),</span><br><span class="line">        shape: BoxShape.circle, <span class="comment">/// <span class="language-markdown">一般这个属性就够了</span></span></span><br><span class="line">      ),</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></div>

<h2 id="4-圆形按钮"><a href="#4-圆形按钮" class="headerlink" title="4. 圆形按钮"></a>4. 圆形按钮</h2><p><a class="link"   href="https://blog.csdn.net/qq_41619796/article/details/115658314" >CSDN：关于 Flutter 的 button 的按钮 ElevatedButton <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">InviteNumScreen</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">ElevatedButton(</span><br><span class="line">          child: Text(<span class="string">&#x27;button&#x27;</span>),</span><br><span class="line">          onPressed: ()&#123;&#125;,</span><br><span class="line">          style: ButtonStyle(</span><br><span class="line">            padding: MaterialStateProperty.all(EdgeInsets.all(<span class="number">20.0</span>)),</span><br><span class="line">              textStyle: MaterialStateProperty.all(TextStyle(fontSize: <span class="number">20</span>)),</span><br><span class="line">              shape: MaterialStateProperty.all(</span><br><span class="line">                CircleBorder(</span><br><span class="line">                  side: BorderSide(</span><br><span class="line">                    color: Colors.deepOrangeAccent,</span><br><span class="line">                    width: <span class="number">1.0</span></span><br><span class="line">                  )</span><br><span class="line">                )</span><br><span class="line">              )</span><br><span class="line">          )</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></div>

<h2 id="5-自定义对话框"><a href="#5-自定义对话框" class="headerlink" title="5.自定义对话框"></a>5.自定义对话框</h2><ol>
<li><p>调用方式</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bool</span> result = <span class="keyword">await</span> showDialog(context: context, builder: (context) =&gt; CustomDialog(<span class="string">&#x27;确定退出紫鲸书苑？&#x27;</span>));</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>自定义的对话框</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> Dialog(</span><br><span class="line">  child: Container(</span><br><span class="line">    decoration: BoxDecoration(</span><br><span class="line">      color: Colors.white,</span><br><span class="line">      borderRadius: BorderRadius.circular(<span class="number">10.0</span>)</span><br><span class="line">    ),</span><br><span class="line">    height: <span class="number">123.0</span>,</span><br><span class="line">    child: Column(</span><br><span class="line">      children: [</span><br><span class="line">        Container(</span><br><span class="line">          padding: EdgeInsets.symmetric(vertical: <span class="number">30.0</span>),</span><br><span class="line">          child: Center(</span><br><span class="line">            child: Text(_message, style: TextStyle(color: Color(<span class="number">0xFF223359</span>), fontSize: <span class="number">16.0</span>)),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        Expanded(</span><br><span class="line">            child: Row(</span><br><span class="line">              children: [</span><br><span class="line">                Flexible(</span><br><span class="line">                  child: Container(</span><br><span class="line">                    decoration: BoxDecoration(</span><br><span class="line">                      border: Border(</span><br><span class="line">                          top: BorderSide(width: <span class="number">1.0</span>, color: Color(<span class="number">0xFFEBEDF0</span>)),</span><br><span class="line">                          right: BorderSide(width: <span class="number">1.0</span>, color: Color(<span class="number">0xFFEBEDF0</span>))</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    child: SizedBox.expand(</span><br><span class="line">                      child: TextButton(</span><br><span class="line">                        onPressed: ()&#123;</span><br><span class="line">                          Nav.pop(<span class="keyword">false</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        child: Text(<span class="string">&#x27;取消&#x27;</span>, style: TextStyle(fontSize: <span class="number">14.0</span> ,color: Color(<span class="number">0xFFA8ADB3</span>))),</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">                Flexible(</span><br><span class="line">                  child: Container(</span><br><span class="line">                    decoration: BoxDecoration(</span><br><span class="line">                      border: Border(</span><br><span class="line">                          top: BorderSide(width: <span class="number">1.0</span>, color: Color(<span class="number">0xFFEBEDF0</span>))</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                    child: SizedBox.expand(</span><br><span class="line">                      child: TextButton(</span><br><span class="line">                        onPressed: ()&#123;</span><br><span class="line">                          Nav.pop(<span class="keyword">true</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        child: Text(<span class="string">&#x27;确定&#x27;</span>, style: TextStyle(fontSize: <span class="number">14.0</span> ,color: Color(<span class="number">0xFF223359</span>))),</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                )</span><br><span class="line">              ],</span><br><span class="line">            )</span><br><span class="line">        )],</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div></li>
</ol>
<h2 id="6-圆角按钮"><a href="#6-圆角按钮" class="headerlink" title="6.圆角按钮"></a>6.圆角按钮</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">ElevatedButton(</span><br><span class="line">                      onPressed: ()&#123;</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;保存&#x27;</span>);</span><br><span class="line">                      &#125;,</span><br><span class="line">                      style: ButtonStyle(</span><br><span class="line">                        shape: MaterialStateProperty.all(</span><br><span class="line">                           RoundedRectangleBorder(borderRadius: BorderRadius.circular(<span class="number">25.0</span>))</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br><span class="line">                      child: Text(<span class="string">&#x27;保存&#x27;</span>)</span><br><span class="line">                  )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ElevatedButton(</span><br><span class="line">                onPressed: ()&#123;</span><br><span class="line"></span><br><span class="line">                &#125;,</span><br><span class="line">                style: ElevatedButton.styleFrom(</span><br><span class="line">                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(<span class="number">5.0</span>)),</span><br><span class="line">                  padding: EdgeInsets.symmetric(horizontal: <span class="number">27.0</span>, vertical: <span class="number">7.0</span>),</span><br><span class="line">                ),</span><br><span class="line">                child: Text(<span class="string">&#x27;确定&#x27;</span>)</span><br><span class="line">            )</span><br></pre></td></tr></table></figure></div>

<h2 id="7-独占一行-TextFormField"><a href="#7-独占一行-TextFormField" class="headerlink" title="7.独占一行 TextFormField"></a>7.独占一行 TextFormField</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">TextFormField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    contentPadding: EdgeInsets.symmetric(vertical: <span class="number">15.0</span>, horizontal: <span class="number">16.0</span>),</span><br><span class="line">    filled: <span class="keyword">true</span>,</span><br><span class="line">    fillColor: Colors.white,</span><br><span class="line">    hintText: <span class="string">&#x27;请输入&#x27;</span>,</span><br><span class="line">    hintStyle: TextStyle(color: Color(<span class="number">0xFFA8ADB3</span>), fontSize: <span class="number">14.0</span>),</span><br><span class="line">    helperText: <span class="string">&#x27;请不要超过16个字符，支持中英文、数字&#x27;</span>,</span><br><span class="line">    helperStyle: TextStyle(color: Color(<span class="number">0xFFC4C8CC</span>), fontSize: <span class="number">13.0</span>),</span><br><span class="line">    border: InputBorder.none</span><br><span class="line">  ),</span><br><span class="line">  style: TextStyle(fontSize: <span class="number">14.0</span>),</span><br><span class="line">),</span><br></pre></td></tr></table></figure></div>

<h2 id="8-独占一行的圆角按钮"><a href="#8-独占一行的圆角按钮" class="headerlink" title="8.独占一行的圆角按钮"></a>8.独占一行的圆角按钮</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Padding(</span><br><span class="line">  padding: EdgeInsets.symmetric(horizontal: <span class="number">40.0</span>),</span><br><span class="line">  child: Row(</span><br><span class="line">    children: [</span><br><span class="line">      Expanded(</span><br><span class="line">        child: ElevatedButton(</span><br><span class="line">            onPressed: ()&#123;</span><br><span class="line">              <span class="built_in">print</span>(<span class="string">&#x27;保存&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            style: ButtonStyle(</span><br><span class="line">              backgroundColor: MaterialStateProperty.all(Color(<span class="number">0xFF3F5AFF</span>)),</span><br><span class="line">              padding: MaterialStateProperty.all(EdgeInsets.symmetric(vertical: <span class="number">12.0</span>)),</span><br><span class="line">              shape: MaterialStateProperty.all(</span><br><span class="line">                 RoundedRectangleBorder(borderRadius: BorderRadius.circular(<span class="number">25.0</span>))</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            child: Text(<span class="string">&#x27;保存&#x27;</span>, style: TextStyle(fontSize: <span class="number">14.0</span>))</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ],</span><br><span class="line">  ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<h2 id="9-文本输入框不限制行数，类似富文本"><a href="#9-文本输入框不限制行数，类似富文本" class="headerlink" title="9.文本输入框不限制行数，类似富文本"></a>9.文本输入框不限制行数，类似富文本</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">TextFormField(</span><br><span class="line">                      maxLines: <span class="keyword">null</span>,</span><br><span class="line">                      expands: <span class="keyword">true</span>,</span><br><span class="line">                      style: TextStyle(fontSize: <span class="number">13.0</span>),</span><br><span class="line">                      decoration: InputDecoration(</span><br><span class="line">                          contentPadding: EdgeInsets.zero,</span><br><span class="line">                          hintText: <span class="string">&#x27;填写详细地址&#x27;</span>,</span><br><span class="line">                          hintStyle: TextStyle(fontSize: <span class="number">13.0</span>, color: Color(<span class="number">0xFFA8ADB3</span>)),</span><br><span class="line">                          border: InputBorder.none</span><br><span class="line">                      ),</span><br><span class="line">                    )</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">separatorBuilder: (BuildContext context, int index)&#123;</span><br><span class="line">  return Divider(height: 2.0, color: Color(0xFFEBEBEB));</span><br><span class="line">&#125;,</span><br><span class="line">itemCount: _linkList.length,</span><br></pre></td></tr></table></figure></div>

<h2 id="10-有关圆角设置"><a href="#10-有关圆角设置" class="headerlink" title="10.有关圆角设置"></a>10.有关圆角设置</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">decoration: BoxDecoration(</span><br><span class="line">         borderRadius: BorderRadius.only(</span><br><span class="line">           topLeft: Radius.circular(<span class="number">30.0</span>),</span><br><span class="line">           topRight: Radius.circular(<span class="number">30.0</span>)</span><br><span class="line">         ),</span><br><span class="line">         color: Colors.white,</span><br><span class="line">       ),</span><br></pre></td></tr></table></figure></div>

<h2 id="11-有关-showModalBottomSheet"><a href="#11-有关-showModalBottomSheet" class="headerlink" title="11.有关 showModalBottomSheet"></a>11.<a class="link"   href="https://blog.csdn.net/cpcpcp123/article/details/97660036" >有关 showModalBottomSheet <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><p><a class="link"   href="https://blog.csdn.net/qq_35317752/article/details/103813196" >解决圆角底部弹窗 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>在 showModalBottomSheet 里面的根容器设置成 SingleChildScrollView，即可实现高度根据内容自适应</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">showModalBottomSheet(<span class="comment">/// <span class="language-markdown">底部弹窗</span></span></span><br><span class="line">                      context: context,</span><br><span class="line">                      enableDrag: <span class="keyword">false</span>,</span><br><span class="line">                      backgroundColor: Colors.white,</span><br><span class="line">                      shape: RoundedRectangleBorder(</span><br><span class="line">                          borderRadius: BorderRadius.only(</span><br><span class="line">                              topLeft: Radius.circular(<span class="number">30.0</span>),</span><br><span class="line">                              topRight: Radius.circular(<span class="number">30.0</span>),</span><br><span class="line">                          )</span><br><span class="line">                      ),</span><br><span class="line">                      builder: (BuildContext context) &#123;</span><br><span class="line">                        <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">                          child: Container(</span><br><span class="line">                            padding: EdgeInsets.symmetric(horizontal: <span class="number">20.0</span>, vertical: <span class="number">15.0</span>),</span><br><span class="line">                            child: Column(</span><br><span class="line">                              children: [</span><br><span class="line">                                Text(<span class="string">&#x27;The cancellation of account&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFF333333</span>), fontSize: <span class="number">16.0</span>)),</span><br><span class="line">                                Padding(</span><br><span class="line">                                  padding: <span class="keyword">const</span> EdgeInsets.symmetric(vertical: <span class="number">15.0</span>),</span><br><span class="line">                                  child: Text(<span class="string">&#x27;Please note: Once your account is logged out,&#x27;</span></span><br><span class="line">                                      <span class="string">&#x27; you will not be able to log in and use your account, &#x27;</span></span><br><span class="line">                                      <span class="string">&#x27;and your rights and interests will be cleared and cannot be restored.&#x27;</span></span><br><span class="line">                                      <span class="string">&#x27; Are you sure to cancel your account?&#x27;</span>,</span><br><span class="line">                                    style: TextStyle(color: Color(<span class="number">0xFF999999</span>), fontSize: <span class="number">12.0</span>),</span><br><span class="line">                                  ),</span><br><span class="line">                                ),</span><br><span class="line">                                Row(</span><br><span class="line">                                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,</span><br><span class="line">                                  children: [</span><br><span class="line">                                    TextButton(</span><br><span class="line">                                        onPressed: ()&#123;</span><br><span class="line">                                          <span class="built_in">print</span>(<span class="string">&#x27;取消订单&#x27;</span>);</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                        style: TextButton.styleFrom(</span><br><span class="line">                                          backgroundColor: Color(<span class="number">0xFF5BCD49</span>),</span><br><span class="line">                                            padding: EdgeInsets.zero,</span><br><span class="line">                                            shape: RoundedRectangleBorder(</span><br><span class="line">                                                borderRadius: BorderRadius.circular(<span class="number">13.5</span>)<span class="comment">/// <span class="language-markdown">外边框</span></span></span><br><span class="line">                                            ),</span><br><span class="line">                                            minimumSize: Size.zero</span><br><span class="line">                                        ),</span><br><span class="line">                                        child: Container(</span><br><span class="line">                                          padding: EdgeInsets.symmetric(horizontal: <span class="number">13.0</span>, vertical: <span class="number">5.0</span>),</span><br><span class="line">                                          child: Text(<span class="string">&#x27;confirm&#x27;</span>, style: TextStyle(color: Colors.white, fontSize: <span class="number">12.0</span>)),</span><br><span class="line">                                        )</span><br><span class="line">                                    ),</span><br><span class="line">                                    TextButton(</span><br><span class="line">                                        onPressed: ()&#123;</span><br><span class="line">                                          <span class="built_in">print</span>(<span class="string">&#x27;取消订单&#x27;</span>);</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                        style: TextButton.styleFrom(</span><br><span class="line">                                            padding: EdgeInsets.zero,</span><br><span class="line">                                            backgroundColor: Colors.white,</span><br><span class="line">                                            shape: RoundedRectangleBorder(</span><br><span class="line">                                                borderRadius: BorderRadius.circular(<span class="number">13.5</span>),</span><br><span class="line">                                                side: BorderSide(width: <span class="number">0.5</span>, color: Color(<span class="number">0xFF999999</span>)) <span class="comment">/// <span class="language-markdown">外边框</span></span></span><br><span class="line">                                            ),</span><br><span class="line">                                            minimumSize: Size.zero</span><br><span class="line">                                        ),</span><br><span class="line">                                        child: Container(</span><br><span class="line">                                          padding: EdgeInsets.symmetric(horizontal: <span class="number">13.0</span>, vertical: <span class="number">5.0</span>),</span><br><span class="line">                                          child: Text(<span class="string">&#x27;cancel&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFF999999</span>), fontSize: <span class="number">12.0</span>)),</span><br><span class="line">                                        )</span><br><span class="line">                                    ),</span><br><span class="line">                                  ],</span><br><span class="line">                                )</span><br><span class="line">                              ],</span><br><span class="line">                            ),</span><br><span class="line">                          ),</span><br><span class="line">                        );</span><br><span class="line">                      &#125;,</span><br><span class="line">                    );</span><br></pre></td></tr></table></figure></div>

<h2 id="12-列表展示"><a href="#12-列表展示" class="headerlink" title="12.列表展示"></a>12.列表展示</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// <span class="language-markdown">列表展示</span></span></span><br><span class="line">ListView.separated(</span><br><span class="line">  shrinkWrap: <span class="keyword">true</span>,</span><br><span class="line">  padding: EdgeInsets.zero,</span><br><span class="line">  physics: NeverScrollableScrollPhysics(),</span><br><span class="line">  separatorBuilder: (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">    <span class="keyword">return</span> Divider(</span><br><span class="line">      height: <span class="number">1.0</span>,</span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">  itemBuilder: (context, index) &#123;</span><br><span class="line">    <span class="keyword">return</span> ShopItem(_list[index]);</span><br><span class="line">  &#125;,</span><br><span class="line">  itemCount: _list.length,</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<h2 id="13-Container-阴影"><a href="#13-Container-阴影" class="headerlink" title="13.Container 阴影"></a>13.Container 阴影</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">boxShadow: [</span><br><span class="line">    BoxShadow(</span><br><span class="line">        color: Colors.black12,</span><br><span class="line">        offset: Offset(<span class="number">0.0</span>, <span class="number">15.0</span>), <span class="comment">//阴影xy轴偏移量</span></span><br><span class="line">        blurRadius: <span class="number">15.0</span>, <span class="comment">//阴影模糊程度</span></span><br><span class="line">        spreadRadius: <span class="number">1.0</span> <span class="comment">//阴影扩散程度</span></span><br><span class="line">    )</span><br><span class="line">],</span><br></pre></td></tr></table></figure></div>

<h2 id="14-TextFormField-属性"><a href="#14-TextFormField-属性" class="headerlink" title="14.TextFormField 属性"></a>14.<a class="link"   href="https://blog.csdn.net/chen1234219/article/details/105047845/" >TextFormField 属性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h2 id="15-Flutter-的-showModalBottomSheet-输入框被弹出的键盘挡住"><a href="#15-Flutter-的-showModalBottomSheet-输入框被弹出的键盘挡住" class="headerlink" title="15.Flutter 的 showModalBottomSheet 输入框被弹出的键盘挡住"></a>15.<a class="link"   href="https://zhuanlan.zhihu.com/p/370424176" >Flutter 的 showModalBottomSheet 输入框被弹出的键盘挡住 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h2 id="16-页面滚动，性能优越的结构"><a href="#16-页面滚动，性能优越的结构" class="headerlink" title="16.页面滚动，性能优越的结构"></a>16.页面滚动，性能优越的结构</h2><ol>
<li>Column -&gt; Expanded -&gt; ListView.builder</li>
</ol>
<h2 id="17-圆角-TextFormField"><a href="#17-圆角-TextFormField" class="headerlink" title="17.圆角 TextFormField"></a>17.圆角 TextFormField</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">TextFormField(</span><br><span class="line">  cursorColor: Color(<span class="number">0xFF5BCD49</span>),</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">      filled: <span class="keyword">true</span>,</span><br><span class="line">      fillColor: Colors.white,</span><br><span class="line">      border: OutlineInputBorder(</span><br><span class="line">        borderRadius: BorderRadius.circular(<span class="number">10.0</span>),</span><br><span class="line">        borderSide: BorderSide.none</span><br><span class="line">      ),</span><br><span class="line">      hintText: <span class="string">&#x27;Enter a new binding mailbox&#x27;</span>,</span><br><span class="line">      hintStyle: TextStyle(</span><br><span class="line">          color: Color(<span class="number">0xFFD6D9DD</span>), fontSize: <span class="number">14.0</span>)),</span><br><span class="line">),</span><br></pre></td></tr></table></figure></div>

<h2 id="18-固定在界面上的时间选择器"><a href="#18-固定在界面上的时间选择器" class="headerlink" title="18.固定在界面上的时间选择器"></a>18.固定在界面上的时间选择器</h2><p>相关链接：</p>
<p><a class="link"   href="https://blog.csdn.net/mengks1987/article/details/104580596" >https://blog.csdn.net/mengks1987/article/details/104580596 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://segmentfault.com/a/1190000020205762" >https://segmentfault.com/a/1190000020205762 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="19-ListWheelScrollView-useDelegate"><a href="#19-ListWheelScrollView-useDelegate" class="headerlink" title="19.ListWheelScrollView.useDelegate"></a>19.ListWheelScrollView.useDelegate</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">ListWheelScrollView.useDelegate(</span><br><span class="line">          itemExtent: <span class="number">50.0</span>,</span><br><span class="line">          diameterRatio: <span class="number">.5</span>,</span><br><span class="line">          childDelegate: ListWheelChildBuilderDelegate(</span><br><span class="line">              builder: (context, index) &#123;</span><br><span class="line">                <span class="keyword">return</span> Container(</span><br><span class="line">                  alignment: Alignment.center,</span><br><span class="line">                  color: Colors.primaries[index % <span class="number">10</span>],</span><br><span class="line">                  child: Text(<span class="string">&#x27;<span class="subst">$index</span>&#x27;</span>),</span><br><span class="line">                );</span><br><span class="line">              &#125;</span><br><span class="line">          ),</span><br><span class="line">    <span class="comment">/// <span class="language-markdown">选中事件</span></span></span><br><span class="line">        onSelectedItemChanged: (val)&#123;</span><br><span class="line">            <span class="built_in">print</span>(val);</span><br><span class="line">        &#125;,</span><br><span class="line">      )</span><br></pre></td></tr></table></figure></div>

<h2 id="20-TextFormField-文章"><a href="#20-TextFormField-文章" class="headerlink" title="20.TextFormField 文章"></a>20.TextFormField 文章</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//www.ptbird.cn/flutter-form-textformfield.html</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Column(</span><br><span class="line">        children: [</span><br><span class="line">          Flexible(</span><br><span class="line">            child: ListView(</span><br><span class="line">              shrinkWrap: <span class="keyword">true</span>,</span><br><span class="line">              children: _links.map((item) =&gt;</span><br><span class="line">                  GestureDetector(</span><br><span class="line">                    onTap: ()&#123;</span><br><span class="line">                      Nav.push((context) =&gt; item[<span class="string">&#x27;link&#x27;</span>]);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    child: Container(</span><br><span class="line">                      margin: EdgeInsets.only(top: <span class="number">5.0</span>),</span><br><span class="line">                      height: <span class="number">50.0</span>,</span><br><span class="line">                      padding: EdgeInsets.only(left: <span class="number">15.0</span>, right: <span class="number">17.0</span>),</span><br><span class="line">                      color: Colors.white,</span><br><span class="line">                      child: Row(</span><br><span class="line">                        mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">                        children: [</span><br><span class="line">                          Text(item[<span class="string">&#x27;title&#x27;</span>], style: TextStyle(color: Color(<span class="number">0xFF333333</span>), fontSize: <span class="number">14.0</span>)),</span><br><span class="line">                          Image.asset(<span class="string">&#x27;arrow_click&#x27;</span>.webp, width: <span class="number">6.0</span>, height: <span class="number">12.0</span>, fit: BoxFit.cover)</span><br><span class="line">                        ],</span><br><span class="line">                      ),</span><br><span class="line">                    ),</span><br><span class="line">                  )</span><br><span class="line">              ).toList(),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      )</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="21-Entry-name-‘classes-dex‘-collided"><a href="#21-Entry-name-‘classes-dex‘-collided" class="headerlink" title="21.Entry name ‘classes.dex‘ collided"></a>21.Entry name ‘classes.dex‘ collided</h2><p>有效的解决方案是把 release 文件夹下之前生成的 apk 删除，然后再次生成 apk。</p>
<h2 id="22-flutter-textformfield-失去焦点"><a href="#22-flutter-textformfield-失去焦点" class="headerlink" title="22.flutter textformfield 失去焦点"></a>22.flutter textformfield 失去焦点</h2><p><a class="link"   href="https://www.cnblogs.com/lude1994/p/14218014.html" >https://www.cnblogs.com/lude1994/p/14218014.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Text(<span class="string">&#x27;Exhaust Fan 1&#x27;</span>)</span><br></pre></td></tr></table></figure></div>

<h2 id="23-InkWell-使用无效"><a href="#23-InkWell-使用无效" class="headerlink" title="23.InkWell 使用无效"></a>23.InkWell 使用无效</h2><p>在外层嵌套个 inkwell，如果还是不行就在 inkwell 外面套一个 Material</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Material(</span><br><span class="line">                        color: Colors.transparent,</span><br><span class="line">                        child: InkWell(</span><br><span class="line">                          onLongPress : ()&#123;</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&#x27;fff&#x27;</span>);</span><br><span class="line">                          &#125;,</span><br><span class="line">                          child: Container(child: Text(<span class="string">&#x27;Exhaust Fan 1&#x27;</span>))</span><br><span class="line">                        ),</span><br><span class="line">                      ),</span><br></pre></td></tr></table></figure></div>

<h2 id="24-瀑布流布局"><a href="#24-瀑布流布局" class="headerlink" title="24.瀑布流布局"></a>24.瀑布流布局</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">StaggeredGridView.countBuilder(</span><br><span class="line">                      padding: EdgeInsets.symmetric(horizontal: <span class="number">15.0</span>, vertical: <span class="number">20.0</span>),</span><br><span class="line">                      shrinkWrap: <span class="keyword">true</span>,</span><br><span class="line">                      physics: NeverScrollableScrollPhysics(),</span><br><span class="line">                      primary: <span class="keyword">true</span>,</span><br><span class="line">                      <span class="comment">//滑动方向</span></span><br><span class="line">                      scrollDirection: Axis.vertical,</span><br><span class="line">                      <span class="comment">//纵轴方向被划分的个数</span></span><br><span class="line">                      crossAxisCount: <span class="number">2</span>,</span><br><span class="line">                      <span class="comment">//item的数量</span></span><br><span class="line">                      itemCount: _shopList.length,</span><br><span class="line">                      mainAxisSpacing: <span class="number">10.0</span>,</span><br><span class="line">                      crossAxisSpacing: <span class="number">10.0</span>,</span><br><span class="line">                      staggeredTileBuilder: (index) =&gt; StaggeredTile.fit(<span class="number">1</span>),</span><br><span class="line">                      itemBuilder: (BuildContext context, <span class="built_in">int</span> index) =&gt; GestureDetector(</span><br><span class="line">                        onTap: () <span class="keyword">async</span>&#123;</span><br><span class="line">                          <span class="keyword">final</span> _app = <span class="string">&#x27;amzn://&#x27;</span>; <span class="comment">/// <span class="language-markdown">跳转到亚马逊app</span></span></span><br><span class="line">                          <span class="keyword">final</span> _url = _shopList[index].url;</span><br><span class="line">                          <span class="keyword">if</span>(<span class="keyword">await</span> canLaunch(_app)) &#123;</span><br><span class="line">                            <span class="keyword">await</span> launch(_app);</span><br><span class="line">                          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">await</span> canLaunch(_url) ? <span class="keyword">await</span> launch(_url) : Chili.showToast(<span class="string">&#x27;Could not launch amazon&#x27;</span>);</span><br><span class="line">                          &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        child: Container(<span class="comment">/// <span class="language-markdown">商品</span></span></span><br><span class="line">                          decoration: BoxDecoration(</span><br><span class="line">                              color: Colors.white,</span><br><span class="line">                              borderRadius: BorderRadius.circular(<span class="number">10.0</span>),</span><br><span class="line">                              boxShadow: [</span><br><span class="line">                                BoxShadow(</span><br><span class="line">                                  color: Color.fromRGBO(<span class="number">196</span>, <span class="number">208</span>, <span class="number">226</span>, <span class="number">0.15</span>),</span><br><span class="line">                                  offset: Offset(<span class="number">6.0</span>, <span class="number">6.0</span>),</span><br><span class="line">                                  blurRadius: <span class="number">6.0</span>,</span><br><span class="line">                                )</span><br><span class="line">                              ]</span><br><span class="line">                          ),</span><br><span class="line">                          child: Padding(</span><br><span class="line">                            padding: EdgeInsets.fromLTRB(<span class="number">8.0</span>, <span class="number">8.0</span>, <span class="number">8.0</span>, <span class="number">15.0</span>),</span><br><span class="line">                            child: Column(</span><br><span class="line">                              crossAxisAlignment: CrossAxisAlignment.center,</span><br><span class="line">                              children: [</span><br><span class="line">                                SizedBox(</span><br><span class="line">                                    width: <span class="number">151.0</span>,</span><br><span class="line">                                    height: <span class="number">151.0</span>,</span><br><span class="line">                                    <span class="comment">/// <span class="language-markdown">商品图片</span></span></span><br><span class="line">                                    child: CachedNetworkImage(</span><br><span class="line">                                      imageUrl: <span class="string">&#x27;<span class="subst">$&#123;Global.imgPath&#125;</span><span class="subst">$&#123;_shopList[index].thumbnail&#125;</span>&#x27;</span>,</span><br><span class="line">                                      fit: BoxFit.cover,</span><br><span class="line">                                      errorWidget: (context, url, error) =&gt; Icon(Icons.error),</span><br><span class="line">                                    )</span><br><span class="line">                                ),</span><br><span class="line">                                <span class="comment">/// <span class="language-markdown">名称</span></span></span><br><span class="line">                                Padding(</span><br><span class="line">                                  padding: EdgeInsets.symmetric(horizontal: <span class="number">8.0</span>, vertical: <span class="number">10.0</span>),</span><br><span class="line">                                  child: Text(_shopList[index].name, textAlign: TextAlign.center,style: TextStyle(color: Color(<span class="number">0xFF333333</span>), fontSize: <span class="number">12.0</span>)),</span><br><span class="line">                                ),</span><br><span class="line">                                <span class="comment">/// <span class="language-markdown">价格</span></span></span><br><span class="line">                                Text(<span class="string">&#x27;\$<span class="subst">$&#123;_shopList[index].price&#125;</span>&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFFF89B6</span>), fontSize: <span class="number">14.0</span>, letterSpacing: <span class="number">-0.01</span>))</span><br><span class="line">                              ],</span><br><span class="line">                            ),</span><br><span class="line">                          ),</span><br><span class="line">                        ),</span><br><span class="line">                      )</span><br><span class="line">                  ),</span><br></pre></td></tr></table></figure></div>

<h2 id="25-解决基线对齐"><a href="#25-解决基线对齐" class="headerlink" title="25.解决基线对齐"></a>25.解决基线对齐</h2><ol>
<li></li>
</ol>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Row(</span><br><span class="line">          crossAxisAlignment: CrossAxisAlignment.baseline,</span><br><span class="line">          textBaseline: TextBaseline.alphabetic,</span><br><span class="line">          children: [</span><br><span class="line">            Text(<span class="string">&#x27;反反复复:&#x27;</span>, style: TextStyle(fontSize: <span class="number">40.0</span>),),</span><br><span class="line">            SizedBox(width: <span class="number">10.0</span>,),</span><br><span class="line">            Text(<span class="string">&#x27;ff&#x27;</span>, style: TextStyle(fontSize: <span class="number">40.0</span>),)</span><br><span class="line">          ],</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li>给 Text 设置高度</li>
</ol>
<h2 id="26-图片裁剪"><a href="#26-图片裁剪" class="headerlink" title="26.图片裁剪"></a>26.图片裁剪</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// <span class="language-markdown">----------------------------主要逻辑----------------------------</span></span></span><br><span class="line"><span class="keyword">final</span> cropKey = GlobalKey&lt;CropState&gt;();</span><br><span class="line"><span class="comment">/// <span class="language-markdown">处理图片</span></span></span><br><span class="line">  Future _handleImage(File originalImage) <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="keyword">final</span> crop = cropKey.currentState;</span><br><span class="line">    <span class="keyword">final</span> scale = crop?.scale;</span><br><span class="line">    <span class="keyword">final</span> area = crop?.area;</span><br><span class="line">    <span class="keyword">late</span> File handeledImg;</span><br><span class="line">    <span class="keyword">if</span>(area == <span class="keyword">null</span> ) &#123;</span><br><span class="line">      Chili.showToast(<span class="string">&#x27;Save failed&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/// <span class="language-markdown">请求访问照片的权限</span></span></span><br><span class="line">    <span class="built_in">bool</span> result =  <span class="keyword">await</span> ImageCrop.requestPermissions();</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        handeledImg = <span class="keyword">await</span> ImageCrop.cropImage(</span><br><span class="line">            file: originalImage,</span><br><span class="line">            scale: scale,</span><br><span class="line">            area: area</span><br><span class="line">        );</span><br><span class="line">      &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">        Chili.showToast(e.toString());</span><br><span class="line">        Nav.pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      handeledImg = originalImage; <span class="comment">/// <span class="language-markdown">失败则获取原来的图片路径</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> handeledImg.path;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">返回处理完图片的路径</span></span></span><br><span class="line">                            _imgPath = <span class="keyword">await</span> _handleImage(File(widget.image));</span><br></pre></td></tr></table></figure></div>

<h2 id="27-选取图片"><a href="#27-选取图片" class="headerlink" title="27. 选取图片"></a>27. 选取图片</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// <span class="language-markdown">----------------------------主要逻辑----------------------------</span></span></span><br><span class="line"><span class="keyword">final</span> ImagePicker _picker = ImagePicker();</span><br><span class="line">XFile? image; <span class="comment">/// <span class="language-markdown">定义图片类型变量</span></span></span><br><span class="line">              <span class="built_in">bool</span> result = <span class="keyword">await</span> ShowModal.showText(</span><br><span class="line">                  context,</span><br><span class="line">                  title: <span class="string">&#x27;Select your operation&#x27;</span>,</span><br><span class="line">                  confirm: <span class="string">&#x27;Camera&#x27;</span>,</span><br><span class="line">                  cancel: <span class="string">&#x27;Album&#x27;</span></span><br><span class="line">              );</span><br><span class="line">              <span class="keyword">if</span>(result) &#123;</span><br><span class="line">                image = <span class="keyword">await</span> _picker.pickImage(source: ImageSource.camera, imageQuality: <span class="number">40</span>);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                image = <span class="keyword">await</span> _picker.pickImage(source: ImageSource.gallery, imageQuality: <span class="number">40</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="comment">/// <span class="language-markdown">如果用户有选取图片则路由到截图</span></span></span><br><span class="line">              <span class="keyword">if</span>(image != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Nav.push((context) =&gt;  CropImageScreen(image!.path));</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;path: <span class="subst">$&#123;image.path&#125;</span>&#x27;</span>);</span><br><span class="line">              &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="28-flutter-blue"><a href="#28-flutter-blue" class="headerlink" title="28. flutter_blue"></a>28. flutter_blue</h2><ol>
<li><p>flutter_blue api</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">flutterBlue = FlutterBlue.instance.state</span><br><span class="line"></span><br><span class="line">flutterBlue.state</span><br><span class="line">flutterBlue.startScan()</span><br><span class="line">flutterBlue.connectedDevices</span><br><span class="line">flutterBlue.scanResults</span><br><span class="line">flutterBlue.isScanning</span><br><span class="line">flutterBlue.stopScan()</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>BluetoothState api</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> BluetoothState &#123;</span><br><span class="line">  unknown,</span><br><span class="line">  unavailable,</span><br><span class="line">  unauthorized,</span><br><span class="line">  turningOn,</span><br><span class="line">  <span class="keyword">on</span>,</span><br><span class="line">  turningOff,</span><br><span class="line">  off</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>BluetoothDeviceState</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> BluetoothDeviceState &#123; disconnected, connecting, connected, disconnecting &#125;</span><br></pre></td></tr></table></figure></div></li>
</ol>
<h2 id="29-自定义底部弹框"><a href="#29-自定义底部弹框" class="headerlink" title="29.自定义底部弹框"></a>29.自定义底部弹框</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShowModal</span> </span>&#123;</span><br><span class="line"> <span class="keyword">static</span> Future&lt;<span class="built_in">bool</span>&gt; showText(context, &#123;title = <span class="string">&#x27;&#x27;</span>, text = <span class="string">&#x27;&#x27;</span>, confirm: <span class="string">&#x27;confirm&#x27;</span>, cancel = <span class="string">&#x27;cancel&#x27;</span>&#125;) <span class="keyword">async</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> showModalBottomSheet(</span><br><span class="line">      context: context,</span><br><span class="line">      enableDrag: <span class="keyword">false</span>,</span><br><span class="line">      isDismissible: <span class="keyword">false</span>,</span><br><span class="line">      backgroundColor: Colors.white,</span><br><span class="line">      shape: RoundedRectangleBorder(</span><br><span class="line">          borderRadius: BorderRadius.only(</span><br><span class="line">            topLeft: Radius.circular(<span class="number">30.0</span>),</span><br><span class="line">            topRight: Radius.circular(<span class="number">30.0</span>),</span><br><span class="line">          )</span><br><span class="line">      ),</span><br><span class="line">      builder: (BuildContext context) &#123;</span><br><span class="line">        <span class="keyword">return</span> SingleChildScrollView(</span><br><span class="line">          child: Container(</span><br><span class="line">            padding: EdgeInsets.symmetric(horizontal: <span class="number">20.0</span>, vertical: <span class="number">15.0</span>),</span><br><span class="line">            child: Column(</span><br><span class="line">              children: [</span><br><span class="line">                <span class="comment">/// <span class="language-markdown">标题</span></span></span><br><span class="line">                Text(title, style: TextStyle(color: Color(<span class="number">0xFF333333</span>), fontSize: <span class="number">16.0</span>)),</span><br><span class="line">                <span class="comment">/// <span class="language-markdown">文本</span></span></span><br><span class="line">                text.isNotEmpty ? Container(</span><br><span class="line">                  margin: EdgeInsets.symmetric(vertical: <span class="number">15.0</span>),</span><br><span class="line">                  child: Text(text, textAlign: TextAlign.center, style: TextStyle(color: Color(<span class="number">0xFF999999</span>), fontSize: <span class="number">12.0</span>),</span><br><span class="line">                  ),</span><br><span class="line">                ) : Container(),</span><br><span class="line">                Row(</span><br><span class="line">                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,</span><br><span class="line">                  children: [</span><br><span class="line">                    <span class="comment">/// <span class="language-markdown">确认</span></span></span><br><span class="line">                    TextButton(</span><br><span class="line">                        onPressed: ()&#123;</span><br><span class="line">                          Nav.pop(<span class="keyword">true</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        style: TextButton.styleFrom(</span><br><span class="line">                            backgroundColor: Color(<span class="number">0xFF5BCD49</span>),</span><br><span class="line">                            padding: EdgeInsets.zero,</span><br><span class="line">                            shape: RoundedRectangleBorder(</span><br><span class="line">                                borderRadius: BorderRadius.circular(<span class="number">13.5</span>)<span class="comment">/// <span class="language-markdown">外边框</span></span></span><br><span class="line">                            ),</span><br><span class="line">                            minimumSize: Size.zero</span><br><span class="line">                        ),</span><br><span class="line">                        child: Container(</span><br><span class="line">                          width: <span class="number">70.0</span>,</span><br><span class="line">                          padding: EdgeInsets.symmetric(vertical: <span class="number">5.0</span>),</span><br><span class="line">                          child: Center(child: Text(confirm, style: TextStyle(color: Colors.white, fontSize: <span class="number">12.0</span>))),</span><br><span class="line">                        )</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">/// <span class="language-markdown">取消</span></span></span><br><span class="line">                    TextButton(</span><br><span class="line">                        onPressed: ()&#123;</span><br><span class="line">                          Nav.pop(<span class="keyword">false</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        style: TextButton.styleFrom(</span><br><span class="line">                            padding: EdgeInsets.zero,</span><br><span class="line">                            backgroundColor: Colors.white,</span><br><span class="line">                            shape: RoundedRectangleBorder(</span><br><span class="line">                                borderRadius: BorderRadius.circular(<span class="number">13.5</span>),</span><br><span class="line">                                side: BorderSide(width: <span class="number">0.5</span>, color: Color(<span class="number">0xFF999999</span>)) <span class="comment">/// <span class="language-markdown">外边框</span></span></span><br><span class="line">                            ),</span><br><span class="line">                            minimumSize: Size.zero</span><br><span class="line">                        ),</span><br><span class="line">                        child: Container(</span><br><span class="line">                          width: <span class="number">70.0</span>,</span><br><span class="line">                          padding: EdgeInsets.symmetric(vertical: <span class="number">5.0</span>),</span><br><span class="line">                          child: Center(child: Text(cancel, style: TextStyle(color: Color(<span class="number">0xFF999999</span>), fontSize: <span class="number">12.0</span>))),</span><br><span class="line">                        )</span><br><span class="line">                    ),</span><br><span class="line">                  ],</span><br><span class="line">                )</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    ).then((value) =&gt; value);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">调用</span></span></span><br><span class="line">              <span class="built_in">bool</span> result = <span class="keyword">await</span> ShowModal.showText(</span><br><span class="line">                  context,</span><br><span class="line">                  title: <span class="string">&#x27;Select your operation&#x27;</span>,</span><br><span class="line">                  confirm: <span class="string">&#x27;Camera&#x27;</span>,</span><br><span class="line">                  cancel: <span class="string">&#x27;Album&#x27;</span></span><br><span class="line">              );</span><br></pre></td></tr></table></figure></div>

<h2 id="30-常用正则表达式"><a href="#30-常用正则表达式" class="headerlink" title="30.常用正则表达式"></a>30.常用正则表达式</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// <span class="language-markdown">常用正则验证</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">@author [Huangch]</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonRegular</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">手机号</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">bool</span> isPhone(<span class="built_in">String</span> input) &#123;</span><br><span class="line">    <span class="built_in">RegExp</span> mobile = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">r&quot;1[0-9]\d&#123;9&#125;$&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> mobile.hasMatch(input);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">6~16位数字和字符组合</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">bool</span> isLoginPassword(<span class="built_in">String</span> input) &#123;</span><br><span class="line">    <span class="built_in">RegExp</span> password = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">r&quot;(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]&#123;6,16&#125;$&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> password.hasMatch(input);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">手机号屏蔽中间4位</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> shieldPhone(<span class="built_in">String</span> phoneNUm) &#123;</span><br><span class="line">    <span class="keyword">return</span> phoneNUm.replaceFirst(<span class="built_in">RegExp</span>(<span class="string">r&quot;\d&#123;4&#125;&quot;</span>), <span class="string">&quot;****&quot;</span>,<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">身份证</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">bool</span> isNationalId(<span class="built_in">String</span> input) &#123;</span><br><span class="line">    <span class="built_in">RegExp</span> id = <span class="built_in">RegExp</span>(<span class="string">r&#x27;^(^[1-9]\d&#123;7&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;$)|(^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d&#123;4&#125;)|\d&#123;3&#125;[Xx])$)$&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> id.hasMatch(input);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="31-关于"><a href="#31-关于" class="headerlink" title="31.关于 ?"></a>31.关于 ?</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">slide[index]?.image != <span class="keyword">null</span>  <span class="comment">// ?. 如果slide[index]为null，则前半部分都为null</span></span><br></pre></td></tr></table></figure></div>

<h2 id="32-常用的登录表单布局"><a href="#32-常用的登录表单布局" class="headerlink" title="32.常用的登录表单布局"></a>32.常用的登录表单布局</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">child: Form(</span><br><span class="line">                    child: Column(</span><br><span class="line">                      children: [</span><br><span class="line">                        TextFormField(</span><br><span class="line">                          decoration: InputDecoration(</span><br><span class="line">                              prefixIconConstraints: BoxConstraints(</span><br><span class="line">                                maxWidth: <span class="number">15.0</span>,</span><br><span class="line">                                maxHeight: <span class="number">18.0</span></span><br><span class="line">                              ),</span><br><span class="line">                              prefixIcon: Image.asset(<span class="string">&#x27;icon_login_phone&#x27;</span>.webp,</span><br><span class="line">                                 fit: BoxFit.cover),</span><br><span class="line">                              hintStyle: TextStyle(</span><br><span class="line">                                  color: Color(<span class="number">0xFFBFBFBF</span>), fontSize: <span class="number">14.0</span>),</span><br><span class="line">                              hintText: <span class="string">&#x27;请输入手机号/邮箱&#x27;</span>),</span><br><span class="line">                        ),</span><br><span class="line">                        TextFormField(</span><br><span class="line">                            decoration: InputDecoration(</span><br><span class="line">                              contentPadding: EdgeInsets.only(left: <span class="number">20.0</span>),</span><br><span class="line">                                prefixIconConstraints: BoxConstraints(</span><br><span class="line">                                    maxWidth: <span class="number">15.0</span>,</span><br><span class="line">                                    maxHeight: <span class="number">18.0</span></span><br><span class="line">                                ),</span><br><span class="line">                                prefixIcon: Image.asset(</span><br><span class="line">                                  <span class="string">&#x27;icon_login_yanzhengma&#x27;</span>.webp,</span><br><span class="line">                                  fit: BoxFit.cover,</span><br><span class="line">                                ),</span><br><span class="line">                                border: UnderlineInputBorder(</span><br><span class="line">                                  borderSide: BorderSide(</span><br><span class="line">                                    color: Color(<span class="number">0xFFF5F6F7</span>)</span><br><span class="line">                                  )</span><br><span class="line">                                ),</span><br><span class="line">                                hintText: <span class="string">&#x27;请输入验证码&#x27;</span>))</span><br><span class="line">                      ],</span><br><span class="line">                    ),</span><br><span class="line">                  )</span><br></pre></td></tr></table></figure></div>

<h2 id="32-网络图片缓存组件"><a href="#32-网络图片缓存组件" class="headerlink" title="32.网络图片缓存组件"></a>32.网络图片缓存组件</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">CachedNetworkImage(</span><br><span class="line">                width: <span class="number">78.0</span>,</span><br><span class="line">                height: <span class="number">78.0</span>,</span><br><span class="line">                imageUrl: <span class="string">&#x27;https://gitee.com/littleJshao/figure-bed/raw/master/images/dragon-1.jpg&#x27;</span>,</span><br><span class="line">                progressIndicatorBuilder:</span><br><span class="line">                    (context, url, downloadProgress) =&gt;</span><br><span class="line">                    CupertinoActivityIndicator(),</span><br><span class="line">                fit: BoxFit.cover,</span><br><span class="line">                errorWidget: (context, url, error) =&gt;</span><br><span class="line">                    Icon(Icons.error),</span><br><span class="line">              )</span><br></pre></td></tr></table></figure></div>

<h2 id="33-解决华为手机在连接-Android-Studio-调试时出现异常：Error-while-Launching-activity"><a href="#33-解决华为手机在连接-Android-Studio-调试时出现异常：Error-while-Launching-activity" class="headerlink" title="33.解决华为手机在连接 Android Studio 调试时出现异常：Error while Launching activity"></a>33.解决华为手机在连接 Android Studio 调试时出现异常：Error while Launching activity</h2><p>百思不得其解，查找多方原因后才发现原来的应用被我从手机上卸载了，但是 Android Studio 却发现你的应用没卸载干净，导致两个应用签名不一致，所以在安装应用的时候会报出无法找到 MainActivity 入口的异常。</p>
<p>在终端中输入以下命令：</p>
<p>adb uninstall yourPakageName</p>
<p><a class="link"   href="https://blog.csdn.net/qq_44214671/article/details/109614908" >博客地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="34-CustomScrollView-之-Sliver-家族的-Widget"><a href="#34-CustomScrollView-之-Sliver-家族的-Widget" class="headerlink" title="34.CustomScrollView 之 Sliver 家族的 Widget"></a>34.CustomScrollView 之 Sliver 家族的 Widget</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">CustomScrollView buildCustomScrollView() &#123;</span><br><span class="line">   <span class="keyword">return</span> CustomScrollView(</span><br><span class="line">     <span class="comment">///<span class="language-markdown">反弹效果</span></span></span><br><span class="line">     physics: BouncingScrollPhysics(),</span><br><span class="line">     <span class="comment">///<span class="language-markdown">Sliver 家族的 Widget</span></span></span><br><span class="line">     slivers: &lt;Widget&gt;[</span><br><span class="line">       <span class="comment">///<span class="language-markdown">复杂的标题</span></span></span><br><span class="line">       buildSliverAppBar(),</span><br><span class="line">       <span class="comment">///<span class="language-markdown">间距</span></span></span><br><span class="line">       SliverPadding(</span><br><span class="line">         padding: EdgeInsets.all(<span class="number">5</span>),</span><br><span class="line">       ),</span><br><span class="line"></span><br><span class="line">       <span class="comment">///<span class="language-markdown">九宫格</span></span></span><br><span class="line">       buildSliverGrid(),</span><br><span class="line">       <span class="comment">///<span class="language-markdown">间距</span></span></span><br><span class="line">       SliverPadding(</span><br><span class="line">         padding: EdgeInsets.all(<span class="number">5</span>),</span><br><span class="line">       ),</span><br><span class="line">       <span class="comment">///<span class="language-markdown">列表</span></span></span><br><span class="line">       buildSliverFixedExtentList()</span><br><span class="line">     ],</span><br><span class="line">   );</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="35-Flutter-Wrap-流式布局嵌套循环-Row-导致占据一行问题"><a href="#35-Flutter-Wrap-流式布局嵌套循环-Row-导致占据一行问题" class="headerlink" title="35.Flutter Wrap 流式布局嵌套循环 Row 导致占据一行问题"></a>35.Flutter Wrap 流式布局嵌套循环 Row 导致占据一行问题</h2><p>项目中我们在使用 Wrap 去循环数据的时候，有一些 UI 需要使用到 Row 布局来进行展示，但是众所周知的是，Row 布局会占满一行，这就导致我们的 Wrap 失效了，如何解决呢？</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Wrap(</span><br><span class="line">     spacing:ScreenAdapter.setWidth(<span class="number">20</span>),<span class="comment">// 主轴(水平)方向间距</span></span><br><span class="line">     runSpacing:ScreenAdapter.setHeight(<span class="number">13</span>), <span class="comment">// 纵轴（垂直）方向间距</span></span><br><span class="line">     <span class="comment">// alignment: WrapAlignment.start, //沿主轴方向居中</span></span><br><span class="line">     direction:Axis.horizontal,</span><br><span class="line">     children: tagList.map&lt;Widget&gt;((item)&#123;</span><br><span class="line">       <span class="keyword">return</span> InkWell(</span><br><span class="line">         child: Container(</span><br><span class="line">             padding: EdgeInsets.symmetric(horizontal:ScreenAdapter.setWidth(<span class="number">20</span>), vertical:ScreenAdapter.setHeight(<span class="number">10</span>)),</span><br><span class="line">             decoration: BoxDecoration(</span><br><span class="line">               color:Color(<span class="number">0xffEEEEEE</span>),</span><br><span class="line">               borderRadius: BorderRadius.circular(<span class="number">20</span>)</span><br><span class="line">             ),</span><br><span class="line">             child:</span><br><span class="line">             RichText(</span><br><span class="line">               text: TextSpan(</span><br><span class="line">                 style: TextStyle(fontSize: <span class="number">25</span>, color: Colors.black, fontWeight:FontWeight.w500),</span><br><span class="line">                 children: [</span><br><span class="line">                   WidgetSpan(</span><br><span class="line">                     child: Container(</span><br><span class="line">                       width: <span class="number">30</span>,</span><br><span class="line">                       child: AspectRatio(</span><br><span class="line">                         aspectRatio: <span class="number">1</span>/<span class="number">1</span>,</span><br><span class="line">                         child: ClipRRect(</span><br><span class="line">                           borderRadius: BorderRadius.circular(<span class="number">20</span>),</span><br><span class="line">                           child: Container(</span><br><span class="line">                             color:Colors.white,</span><br><span class="line">                             child:Icon(Icons.add, size: <span class="number">20</span>, color:Color(<span class="number">0xffDB4739</span>))</span><br><span class="line">                           ),</span><br><span class="line">                         ),</span><br><span class="line">                       ),</span><br><span class="line">                     ),</span><br><span class="line">                   ),</span><br><span class="line">                   TextSpan(text:<span class="string">&#x27;<span class="subst">$&#123;item[<span class="string">&#x27;title&#x27;</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">                 ]</span><br><span class="line">               ),</span><br><span class="line">             )</span><br><span class="line">         ),</span><br><span class="line">         onTap: ()&#123;</span><br><span class="line">           Navigator.pushNamed(context, <span class="string">&#x27;/themeDetails&#x27;</span>, arguments: &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;3RDOl99mWb&#x27;</span>&#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">       );</span><br><span class="line">     &#125;).toList()</span><br><span class="line">   )</span><br></pre></td></tr></table></figure></div>

<h2 id="36-flutter-输入框-TextField-设置高度以及背景色等样式的正确姿势"><a href="#36-flutter-输入框-TextField-设置高度以及背景色等样式的正确姿势" class="headerlink" title="36.flutter 输入框 TextField 设置高度以及背景色等样式的正确姿势"></a>36.<a class="link"   href="https://www.cnblogs.com/yongfengnice/p/14143805.html" >flutter 输入框 TextField 设置高度以及背景色等样式的正确姿势 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h2 id="37-Row-中-使用-Text，并实现超出隐藏"><a href="#37-Row-中-使用-Text，并实现超出隐藏" class="headerlink" title="37.Row 中 使用 Text，并实现超出隐藏"></a>37.Row 中 使用 Text，并实现超出隐藏</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Row(</span><br><span class="line">                mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                children: [</span><br><span class="line">                  Flexible(</span><br><span class="line">                    child: Text(</span><br><span class="line">                        <span class="string">&#x27;<span class="subst">$&#123;(value?.toString()?.isEmpty ?? <span class="keyword">true</span>) ? <span class="string">&#x27;请选择&#x27;</span> : value.toString()&#125;</span>&#x27;</span>,</span><br><span class="line">                        overflow: TextOverflow.ellipsis,</span><br><span class="line">                        style: TextStyle(</span><br><span class="line">                            fontSize: <span class="number">14.0</span>, color: Color(<span class="number">0xFF999999</span>))),</span><br><span class="line">                  ),</span><br><span class="line">                  Image.asset(<span class="string">&#x27;btn_common_right&#x27;</span>.webp,</span><br><span class="line">                      width: <span class="number">28.0</span>, height: <span class="number">28.0</span>, fit: BoxFit.cover)</span><br><span class="line">                ],</span><br><span class="line">              )</span><br></pre></td></tr></table></figure></div>

<h2 id="38-DropdownButton"><a href="#38-DropdownButton" class="headerlink" title="38.DropdownButton"></a>38.DropdownButton</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">DropdownButton(</span><br><span class="line">                         alignment: AlignmentDirectional.centerEnd,</span><br><span class="line">                         items: <span class="built_in">List</span>.generate(</span><br><span class="line">                           _goodsType.length,</span><br><span class="line">                           (index) =&gt; DropdownMenuItem(</span><br><span class="line">                             child: Text(_goodsType[index].name!),</span><br><span class="line">                             value: _goodsType[index].id,</span><br><span class="line">                           ),</span><br><span class="line">                         ),</span><br><span class="line">                         value: goodsCategory.id,</span><br><span class="line">                         isDense: <span class="keyword">true</span>,</span><br><span class="line">                         style: TextStyle(</span><br><span class="line">                             fontSize: <span class="number">14.0</span>, color: Color(<span class="number">0xFF333333</span>)),</span><br><span class="line">                         onChanged: (val) &#123;</span><br><span class="line">                           setter(() &#123;</span><br><span class="line">                             goodsCategory.id = val <span class="keyword">as</span> <span class="built_in">int</span>;</span><br><span class="line">                           &#125;);</span><br><span class="line">                         &#125;,</span><br><span class="line">                         icon: Image.asset(</span><br><span class="line">                           <span class="string">&#x27;btn_common_down&#x27;</span>.webp,</span><br><span class="line">                           width: <span class="number">28.0</span>,</span><br><span class="line">                           height: <span class="number">29.0</span>,</span><br><span class="line">                           fit: BoxFit.cover,</span><br><span class="line">                         ),</span><br><span class="line">                         underline: Container(),</span><br><span class="line">                       )</span><br></pre></td></tr></table></figure></div>

<h2 id="39-复杂列表的使用，并保持销毁，初始化"><a href="#39-复杂列表的使用，并保持销毁，初始化" class="headerlink" title="39.复杂列表的使用，并保持销毁，初始化"></a>39.复杂列表的使用，并保持销毁，初始化</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">CustomScrollView(</span><br><span class="line">            slivers: [</span><br><span class="line">              SliverList(</span><br><span class="line">                delegate: SliverChildListDelegate([</span><br><span class="line">                  GoogleMapScreen(</span><br><span class="line">                      latitude: <span class="number">2.0</span>, longitude: <span class="number">2.0</span>, onTap: (pos) &#123;&#125;)</span><br><span class="line">                ]),</span><br><span class="line">              ),</span><br><span class="line">              SliverList(</span><br><span class="line">                  delegate: SliverChildBuilderDelegate(</span><br><span class="line">                        (context, index) &#123;</span><br><span class="line">                      <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; images = _list[index].images!.split(<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">                      <span class="keyword">return</span> DataCard(</span><br><span class="line">                        info: [</span><br><span class="line">                          labelText(<span class="string">&#x27;仓库名称：&#x27;</span>, <span class="string">&#x27;<span class="subst">$&#123;_list[index].name&#125;</span>&#x27;</span>),</span><br><span class="line">                          labelText(<span class="string">&#x27;仓库地址：&#x27;</span>, <span class="string">&#x27;<span class="subst">$&#123;_list[index].address&#125;</span>&#x27;</span>),</span><br><span class="line">                          labelText(<span class="string">&#x27;仓库电话：&#x27;</span>, <span class="string">&#x27;<span class="subst">$&#123;_list[index].contactsPhone&#125;</span>&#x27;</span>),</span><br><span class="line">                          labelText(<span class="string">&#x27;当前距离：：&#x27;</span>, <span class="string">&#x27;<span class="subst">$&#123;_list[index].distance&#125;</span>&#x27;</span>),</span><br><span class="line">                        ],</span><br><span class="line">                        imageWrap: images,</span><br><span class="line">                        btnGroup: [</span><br><span class="line">                          customButton(text: <span class="string">&#x27;一键导航&#x27;</span>, callback: () &#123;&#125;),</span><br><span class="line">                          customButton(text: <span class="string">&#x27;拨打电话&#x27;</span>, callback: () &#123;&#125;),</span><br><span class="line">                        ],</span><br><span class="line">                      );</span><br><span class="line">                    &#125;,</span><br><span class="line">                    childCount: _list.length,</span><br><span class="line">                  ))</span><br><span class="line">            ],</span><br><span class="line">          )</span><br></pre></td></tr></table></figure></div>

<h2 id="40-类似-label-标签，带有外边框"><a href="#40-类似-label-标签，带有外边框" class="headerlink" title="40.类似 label 标签，带有外边框"></a>40.类似 label 标签，带有外边框</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Container(</span><br><span class="line">      margin: EdgeInsets.only(right: <span class="number">8.0</span>),</span><br><span class="line">      padding: EdgeInsets.symmetric(horizontal: <span class="number">6.0</span>, vertical: <span class="number">2.0</span>),</span><br><span class="line">      decoration: BoxDecoration(</span><br><span class="line">          color: Color.fromRGBO(<span class="number">255</span>, <span class="number">159</span>, <span class="number">33</span>, <span class="number">0.08</span>),</span><br><span class="line">          border: Border.all(color: Color(<span class="number">0xFFFF9F21</span>)),</span><br><span class="line">          borderRadius: BorderRadius.all(Radius.circular(<span class="number">4.0</span>))),</span><br><span class="line">      child: Text(<span class="string">&#x27;<span class="subst">$&#123;text&#125;</span>&#x27;</span>,</span><br><span class="line">          style: TextStyle(color: Color(<span class="number">0xFFFF9F21</span>), fontSize: <span class="number">12.0</span>)),</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></div>

<h2 id="41-安卓内部更新-ota-update"><a href="#41-安卓内部更新-ota-update" class="headerlink" title="41.安卓内部更新 ota_update"></a>41.安卓内部更新 ota_update</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">void</span> _updateVersion() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isIOS)&#123;</span><br><span class="line">      <span class="built_in">String</span> url = <span class="string">&#x27;<span class="subst">$&#123;widget.data.url&#125;</span>&#x27;</span>; <span class="comment">// 这是微信的地址，到时候换成自己的应用的地址</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">await</span> canLaunch(url))&#123;</span><br><span class="line">        <span class="keyword">await</span> launch(url);</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;Could not launch <span class="subst">$url</span>&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (Platform.isAndroid)&#123;</span><br><span class="line">      <span class="built_in">String</span> url = <span class="string">&#x27;<span class="subst">$&#123;widget.data.url&#125;</span>&#x27;</span>;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;下载的链接：<span class="subst">$&#123;widget.data.url&#125;</span>&#x27;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// destinationFilename 是对下载的apk进行重命名</span></span><br><span class="line">        OtaUpdate().execute(url, destinationFilename: <span class="string">&#x27;news.apk&#x27;</span>).listen(</span><br><span class="line">              (OtaEvent event) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;status:<span class="subst">$&#123;event.status&#125;</span>,value:<span class="subst">$&#123;event.value&#125;</span>&#x27;</span>);</span><br><span class="line">            <span class="keyword">switch</span>(event.status)&#123;</span><br><span class="line">              <span class="keyword">case</span> OtaStatus.DOWNLOADING:<span class="comment">// 下载中</span></span><br><span class="line">                setState(() &#123;</span><br><span class="line">                  progress = <span class="string">&#x27;下载进度:<span class="subst">$&#123;event.value&#125;</span>%&#x27;</span>;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> OtaStatus.INSTALLING: <span class="comment">//安装中</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;安装中&#x27;</span>);</span><br><span class="line">                progress=<span class="keyword">null</span>;</span><br><span class="line">                setState(() &#123;&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> OtaStatus.PERMISSION_NOT_GRANTED_ERROR: <span class="comment">// 权限错误</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;更新失败，请稍后再试&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">default</span>: <span class="comment">// 其他问题</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;其他问题&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        );</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;更新失败，请稍后再试&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">///<span class="language-markdown">api--版本更新检查</span></span></span><br><span class="line">  ApplicationFindLatestData data;</span><br><span class="line">  _applicationFindLatest(<span class="built_in">String</span> platform) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> RequestUtil.applicationFindLatest(</span><br><span class="line">      NoActionIntercept(<span class="keyword">this</span>),</span><br><span class="line">      platform,</span><br><span class="line">    ).then((res) &#123;</span><br><span class="line">      <span class="keyword">if</span>(res.code==<span class="number">200</span>)&#123;</span><br><span class="line">        data = res.data;</span><br><span class="line">        Commons.isCheckUpData = <span class="keyword">true</span>;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;现在版本号：<span class="subst">$&#123;LocalStorage.get(Commons.VERSION)&#125;</span>  目标：<span class="subst">$&#123;data.name&#125;</span>&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (data.name != LocalStorage.<span class="keyword">get</span>(Commons.VERSION)) &#123;</span><br><span class="line"><span class="comment">//        Commons.isShowUpData = true;</span></span><br><span class="line">          showDialog(context: context,builder: (context)&#123;</span><br><span class="line">            <span class="keyword">return</span> UpdateApp(data: data,);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          showToast(<span class="string">&#x27;已是最新版本&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        setState(() &#123;&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).catchError((e) &#123;&#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="43-打开外部链接-url-launcher"><a href="#43-打开外部链接-url-launcher" class="headerlink" title="43.打开外部链接 url_launcher"></a>43.打开外部链接 url_launcher</h2><ol>
<li>android 配置</li>
</ol>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">&lt;queries&gt;</span><br><span class="line">  &lt;!-- If your app opens https URLs --&gt;</span><br><span class="line">  &lt;intent&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;android.intent.action.VIEW&quot;</span> /&gt;</span><br><span class="line">    &lt;data android:scheme=<span class="string">&quot;https&quot;</span> /&gt;</span><br><span class="line">  &lt;/intent&gt;</span><br><span class="line">  &lt;!-- If your app makes calls --&gt;</span><br><span class="line">  &lt;intent&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;android.intent.action.DIAL&quot;</span> /&gt;</span><br><span class="line">    &lt;data android:scheme=<span class="string">&quot;tel&quot;</span> /&gt;</span><br><span class="line">  &lt;/intent&gt;</span><br><span class="line">  &lt;!-- If your app emails --&gt;</span><br><span class="line">  &lt;intent&gt;</span><br><span class="line">    &lt;action android:name=<span class="string">&quot;android.intent.action.SEND&quot;</span> /&gt;</span><br><span class="line">    &lt;data android:mimeType=<span class="string">&quot;*/*&quot;</span> /&gt;</span><br><span class="line">  &lt;/intent&gt;</span><br><span class="line">&lt;/queries&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li><p>ios 配置</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">  &lt;string&gt;https&lt;/string&gt;</span><br><span class="line">  &lt;string&gt;http&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>使用</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> _launchURL() <span class="keyword">async</span> =&gt;</span><br><span class="line">    <span class="keyword">await</span> canLaunch(_url) ? <span class="keyword">await</span> launch(_url) : <span class="keyword">throw</span> <span class="string">&#x27;Could not launch <span class="subst">$_url</span>&#x27;</span>;</span><br></pre></td></tr></table></figure></div></li>
</ol>
<p>&#x3D;&#x3D;使用注意：url 要加特定的前缀；例如：‘tel’+url 调用拨号界面&#x3D;&#x3D;</p>
<h2 id="44-flutter-打包的-app-闪退"><a href="#44-flutter-打包的-app-闪退" class="headerlink" title="44.flutter 打包的 app 闪退"></a>44.flutter 打包的 app 闪退</h2><p>在 app 下面的 build.gradle 中：</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//关闭混淆, 否则在运行release包后可能出现运行崩溃， TODO后续进行混淆配置</span></span><br><span class="line">minifyEnabled <span class="keyword">false</span> <span class="comment">//删除无用代码</span></span><br><span class="line">shrinkResources <span class="keyword">false</span> <span class="comment">//删除无用资源</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> Add your own signing config for the release build.</span></span><br><span class="line">            <span class="comment">// Signing with the debug keys for now, so `flutter run --release` works.</span></span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">            minifyEnabled <span class="keyword">false</span> <span class="comment">//删除无用代码</span></span><br><span class="line">            shrinkResources <span class="keyword">false</span> <span class="comment">//删除无用资源</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="46-ios-加载（loading）"><a href="#46-ios-加载（loading）" class="headerlink" title="46. ios 加载（loading）"></a>46. ios 加载（loading）</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">CupertinoActivityIndicator()</span><br></pre></td></tr></table></figure></div>

<h2 id="47-flutter-查看-pdf-文件"><a href="#47-flutter-查看-pdf-文件" class="headerlink" title="47.flutter 查看 pdf 文件"></a>47.flutter 查看 pdf 文件</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">#A package to <span class="keyword">show</span> Native PDF View <span class="keyword">for</span> iOS and Android, support Open from a different resource like Path, Asset or Url and Cache it.</span><br><span class="line">flutter_cached_pdfview</span><br></pre></td></tr></table></figure></div>

<h2 id="48-轮播"><a href="#48-轮播" class="headerlink" title="48.轮播"></a>48.轮播</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">CarouselSlider(</span><br><span class="line">                         <span class="comment">/// <span class="language-markdown">轮播</span></span></span><br><span class="line">                         carouselController: _controller,</span><br><span class="line">                         options: CarouselOptions(</span><br><span class="line">                             autoPlay: <span class="keyword">true</span>,</span><br><span class="line">                             viewportFraction: <span class="number">1</span>,</span><br><span class="line">                             height: <span class="number">281.0</span>,</span><br><span class="line">                           onPageChanged: (index, res) &#123;</span><br><span class="line">                               setState(() &#123;</span><br><span class="line">                                 _currBanner = index;</span><br><span class="line">                               &#125;);</span><br><span class="line">                           &#125;</span><br><span class="line">                         ),</span><br><span class="line">                         items: bannerList</span><br><span class="line">                             .map((data) =&gt;</span><br><span class="line">                                 Builder(builder: (BuildContext context) &#123;</span><br><span class="line">                                   <span class="keyword">return</span> GestureDetector(</span><br><span class="line">                                     onTap: () &#123;</span><br><span class="line">                                       <span class="keyword">if</span>(data.link!.isNotEmpty) &#123;</span><br><span class="line">                                         Utils.openUrl(data.link!);</span><br><span class="line">                                         <span class="keyword">return</span>;</span><br><span class="line">                                       &#125;</span><br><span class="line">                                       Nav.push(</span><br><span class="line">                                           (context) =&gt; BannerDetailScreen(</span><br><span class="line">                                                 title: data.title!,</span><br><span class="line">                                                 bannerId: data.id!,</span><br><span class="line">                                               ));</span><br><span class="line">                                     &#125;,</span><br><span class="line">                         <span class="comment">///<span class="language-markdown">控制图片显示的尺寸主要正对下面的CachedNetworkImage修改即可，例如图片无法撑开宽度则设置width:double.maxFinite,</span></span></span><br><span class="line">                                     child: CachedNetworkImage(</span><br><span class="line">                                       width: <span class="built_in">double</span>.maxFinite,</span><br><span class="line">                                       imageUrl:</span><br><span class="line">                                           <span class="string">&#x27;<span class="subst">$&#123;Global.baseImageUrl&#125;</span><span class="subst">$&#123;data.image&#125;</span>&#x27;</span>,</span><br><span class="line">                                       progressIndicatorBuilder:</span><br><span class="line">                                           (context, url, downloadProgress) =&gt;</span><br><span class="line">                                               CupertinoActivityIndicator(),</span><br><span class="line">                                       height: <span class="number">281.0</span>,</span><br><span class="line">                                       fit: BoxFit.cover,</span><br><span class="line">                                       errorWidget: (context, url, error) =&gt;</span><br><span class="line">                                           Icon(Icons.error),</span><br><span class="line">                                     ),</span><br><span class="line">                                   );</span><br><span class="line">                                 &#125;))</span><br><span class="line">                       )</span><br></pre></td></tr></table></figure></div>

<h2 id="49-谷歌路线图"><a href="#49-谷歌路线图" class="headerlink" title="49.谷歌路线图"></a>49.谷歌路线图</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter_polyline_points/flutter_polyline_points.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:google_maps_flutter/google_maps_flutter.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">查看司机位置</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CheckDriverPosition</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> CheckDriverPosition(&#123;<span class="keyword">required</span> <span class="keyword">this</span>.destLocation, <span class="keyword">required</span> <span class="keyword">this</span>.originLocation, Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">Map</span> originLocation;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">Map</span> destLocation;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;CheckDriverPosition&gt; createState() =&gt; _CheckDriverPositionState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CheckDriverPositionState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">CheckDriverPosition</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  GoogleMapController? _mapController;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">标记点列表</span></span></span><br><span class="line">  <span class="built_in">Map</span>&lt;MarkerId, Marker&gt; markers = &lt;MarkerId, Marker&gt;&#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">初始化视野 的经纬度</span></span></span><br><span class="line">  <span class="built_in">double</span> centerLat = <span class="number">0</span> ;</span><br><span class="line">  <span class="built_in">double</span> centerLong = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;PolylineId, Polyline&gt; polylines = &#123;&#125;;</span><br><span class="line">  <span class="built_in">List</span>&lt;LatLng&gt; polylineCoordinates = [];</span><br><span class="line">  PolylinePoints polylinePoints = PolylinePoints();</span><br><span class="line">  <span class="built_in">String</span> googleApiKey = <span class="string">&#x27;AIzaSyAEF80-c_mLIj7PxKi6XU8qlkAvvH3fbhM&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    <span class="comment">// /// origin marker</span></span><br><span class="line">    _addMarker(LatLng(widget.originLocation[<span class="string">&quot;lat&quot;</span>], widget.originLocation[<span class="string">&quot;long&quot;</span>]), <span class="string">&quot;origin&quot;</span>,</span><br><span class="line">        BitmapDescriptor.defaultMarker);</span><br><span class="line">    <span class="comment">/// <span class="language-markdown">destination marker</span></span></span><br><span class="line">    _addMarker(LatLng(widget.destLocation[<span class="string">&quot;lat&quot;</span>], widget.destLocation[<span class="string">&quot;long&quot;</span>]), <span class="string">&quot;destination&quot;</span>,</span><br><span class="line">        BitmapDescriptor.defaultMarker);</span><br><span class="line">    _getPolyline();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">        backgroundColor: Color(<span class="number">0xffF9F9F9</span>),</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          leading: IconButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              Nav.pop();</span><br><span class="line">            &#125;,</span><br><span class="line">            icon: Image.asset(<span class="string">&#x27;btn_common_left&#x27;</span>.webp,</span><br><span class="line">                width: <span class="number">28.0</span>, fit: BoxFit.cover),</span><br><span class="line">          ),</span><br><span class="line">          title: Text(</span><br><span class="line">            <span class="string">&#x27;查看司机位置&#x27;</span>.i18n,</span><br><span class="line">            style: TextStyle(fontSize: <span class="number">18</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        body: GoogleMap(</span><br><span class="line">          zoomControlsEnabled: <span class="keyword">false</span>,</span><br><span class="line">          polylines: <span class="built_in">Set</span>&lt;Polyline&gt;.of(polylines.values),</span><br><span class="line">          initialCameraPosition: CameraPosition(</span><br><span class="line">            zoom: <span class="number">10.0</span>,</span><br><span class="line">            target: LatLng(widget.originLocation[<span class="string">&#x27;lat&#x27;</span>], widget.originLocation[<span class="string">&#x27;long&#x27;</span>]),</span><br><span class="line">          ),</span><br><span class="line">          onMapCreated: _onMapCreated,</span><br><span class="line">          myLocationEnabled: <span class="keyword">true</span>,</span><br><span class="line">          <span class="comment">// markers: Set&lt;Marker&gt;.of(markers.values),</span></span><br><span class="line">          tiltGesturesEnabled: <span class="keyword">true</span>,</span><br><span class="line">          compassEnabled: <span class="keyword">true</span>,</span><br><span class="line">        ));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _onMapCreated(GoogleMapController controller) <span class="keyword">async</span> &#123;</span><br><span class="line">    _mapController = controller;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _addMarker(LatLng position, <span class="built_in">String</span> id, BitmapDescriptor descriptor) &#123;</span><br><span class="line">    MarkerId markerId = MarkerId(id);</span><br><span class="line">    Marker marker =</span><br><span class="line">    Marker(markerId: markerId, icon: descriptor, position: position);</span><br><span class="line">    markers[markerId] = marker;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _addPolyLine() &#123;</span><br><span class="line">    PolylineId id = PolylineId(<span class="string">&quot;poly&quot;</span>);</span><br><span class="line">    Polyline polyline = Polyline(</span><br><span class="line">      polylineId: id,</span><br><span class="line">      color: Color(<span class="number">0xFFFF9F21</span>),</span><br><span class="line">      points: polylineCoordinates,</span><br><span class="line">      width: <span class="number">5</span>,</span><br><span class="line">    );</span><br><span class="line">    polylines[id] = polyline;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _getPolyline() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> polylinePoints</span><br><span class="line">        .getRouteBetweenCoordinates(</span><br><span class="line">      googleApiKey,</span><br><span class="line">      PointLatLng(widget.originLocation[<span class="string">&#x27;lat&#x27;</span>], widget.originLocation[<span class="string">&#x27;long&#x27;</span>]),</span><br><span class="line">      PointLatLng(widget.destLocation[<span class="string">&#x27;lat&#x27;</span>], widget.destLocation[<span class="string">&#x27;long&#x27;</span>]),</span><br><span class="line">      wayPoints: [</span><br><span class="line">        PolylineWayPoint(location: <span class="string">&quot;22.802306,113.164728&quot;</span>),</span><br><span class="line">        PolylineWayPoint(location: <span class="string">&quot;22.557069, 113.429766&quot;</span>),</span><br><span class="line">      ],</span><br><span class="line">      travelMode: TravelMode.driving,</span><br><span class="line">    ) .then((value) &#123;</span><br><span class="line">      <span class="keyword">if</span> (value.points.isNotEmpty) &#123;</span><br><span class="line">        value.points.forEach((PointLatLng point) &#123;</span><br><span class="line">          polylineCoordinates.add(LatLng(point.latitude, point.longitude));</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">      _addPolyLine();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">///<span class="language-markdown">获取起点与终点之间 中间的经纬度坐标</span></span></span><br><span class="line">  <span class="comment">// void getCenterLonLat()&#123;</span></span><br><span class="line">  <span class="comment">//   centerLat = widget.originLocation[&#x27;lat&#x27;] - widget.destLocation[&#x27;lat&#x27;];</span></span><br><span class="line">  <span class="comment">//   centerLong = widget.originLocation[&#x27;long&#x27;] - widget.destLocation[&#x27;long&#x27;];</span></span><br><span class="line">  <span class="comment">//   //Math.abs()绝对值</span></span><br><span class="line">  <span class="comment">//   if( centerLong &gt; 0)&#123;</span></span><br><span class="line">  <span class="comment">//     centerLong = widget.originLocation[&#x27;long&#x27;] - centerLong.abs()   / 2;</span></span><br><span class="line">  <span class="comment">//   &#125;else&#123;</span></span><br><span class="line">  <span class="comment">//     centerLong = widget.destLocation[&#x27;long&#x27;] - centerLong.abs() / 2;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">//   if( centerLat &gt; 0)&#123;</span></span><br><span class="line">  <span class="comment">//     centerLat = widget.originLocation[&#x27;lat&#x27;] -  centerLat.abs() / 2;</span></span><br><span class="line">  <span class="comment">//   &#125;else&#123;</span></span><br><span class="line">  <span class="comment">//     centerLat = widget.destLocation[&#x27;lat&#x27;] - centerLat.abs() / 2;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="50-下载文件的-demo-不能正常运行，相关方法只做参考"><a href="#50-下载文件的-demo-不能正常运行，相关方法只做参考" class="headerlink" title="50.下载文件的 demo(不能正常运行，相关方法只做参考)"></a>50.下载文件的 demo(不能正常运行，相关方法只做参考)</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:isolate&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:device_info_plus/device_info_plus.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter_downloader/flutter_downloader.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:path_provider/path_provider.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:permission_handler/permission_handler.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:ting_hui_wu_liu_user_app/global.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadFileWidget</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> DownloadFileWidget(&#123;<span class="keyword">required</span> <span class="keyword">this</span>.link, Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载链接</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> link;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _DownloadFileWidgetState createState() =&gt; _DownloadFileWidgetState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DownloadFileWidgetState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">DownloadFileWidget</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">当前的任务</span></span></span><br><span class="line">  <span class="keyword">late</span> TaskInfo _task;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">侦听器</span></span></span><br><span class="line">  ReceivePort _port = ReceivePort();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">保存路径</span></span></span><br><span class="line">  <span class="keyword">late</span> <span class="built_in">String</span> _localPath;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">绑定前台和后台之间的通信</span></span></span><br><span class="line">  <span class="keyword">void</span> _bindBackgroundIsolate() &#123;</span><br><span class="line">    <span class="built_in">bool</span> isSuccess = IsolateNameServer.registerPortWithName(</span><br><span class="line">        _port.sendPort, <span class="string">&#x27;downloader_send_port&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!isSuccess) &#123;</span><br><span class="line">      _unbindBackgroundIsolate();</span><br><span class="line">      _bindBackgroundIsolate();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _port.listen((<span class="built_in">dynamic</span> data) &#123;</span><br><span class="line">      <span class="comment">// if (debug) &#123;</span></span><br><span class="line">      <span class="comment">//   print(&#x27;UI Isolate Callback: $data&#x27;);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="built_in">String?</span> id = data[<span class="number">0</span>];</span><br><span class="line">      DownloadTaskStatus? status = data[<span class="number">1</span>];</span><br><span class="line">      <span class="built_in">int?</span> progress = data[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if (_tasks != null &amp;&amp; _tasks!.isNotEmpty) &#123;</span></span><br><span class="line">      <span class="comment">//   final task = _tasks!.firstWhere((task) =&gt; task.taskId == id);</span></span><br><span class="line">      <span class="comment">//   setState(() &#123;</span></span><br><span class="line">      <span class="comment">//     task.status = status;</span></span><br><span class="line">      <span class="comment">//     task.progress = progress;</span></span><br><span class="line">      <span class="comment">//   &#125;);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">检查权限</span></span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _checkPermission() <span class="keyword">async</span> &#123;</span><br><span class="line">    DeviceInfoPlugin deviceInfo = DeviceInfoPlugin();</span><br><span class="line">    AndroidDeviceInfo androidInfo = <span class="keyword">await</span> deviceInfo.androidInfo;</span><br><span class="line">    <span class="keyword">if</span> (Theme.of(context).platform == TargetPlatform.android &amp;&amp;</span><br><span class="line">        androidInfo.version.sdkInt! &lt;= <span class="number">28</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> status = <span class="keyword">await</span> Permission.storage.status;</span><br><span class="line">      <span class="keyword">if</span> (status != PermissionStatus.granted) &#123;</span><br><span class="line">        <span class="keyword">final</span> result = <span class="keyword">await</span> Permission.storage.request();</span><br><span class="line">        <span class="keyword">if</span> (result == PermissionStatus.granted) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">设置保存路径</span></span></span><br><span class="line">  Future&lt;<span class="built_in">String?</span>&gt; _findLocalPath() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> externalStorageDirPath;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isAndroid) &#123;</span><br><span class="line">      <span class="keyword">final</span> directory = <span class="keyword">await</span> getExternalStorageDirectory();</span><br><span class="line">      externalStorageDirPath = directory?.path;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Platform.isIOS) &#123;</span><br><span class="line">      externalStorageDirPath =</span><br><span class="line">          (<span class="keyword">await</span> getApplicationDocumentsDirectory()).absolute.path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// print(&#x27;externalStorageDirPath:\n$externalStorageDirPath&#x27;);</span></span><br><span class="line">    <span class="keyword">return</span> externalStorageDirPath;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _prepareSaveDir() <span class="keyword">async</span> &#123;</span><br><span class="line">    _localPath = (<span class="keyword">await</span> _findLocalPath())!;</span><br><span class="line">    <span class="keyword">final</span> savedDir = Directory(_localPath);</span><br><span class="line">    <span class="built_in">bool</span> hasExisted = <span class="keyword">await</span> savedDir.exists();</span><br><span class="line">    <span class="keyword">if</span> (!hasExisted) &#123;</span><br><span class="line">      savedDir.create();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">初始化存储路径，存储权限，获取本地所有任务信息</span></span></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _prepare() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="comment">/// <span class="language-markdown">获取本地的所有任务信息</span></span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">List</span>&lt;DownloadTask&gt; ?tasks = <span class="keyword">await</span> FlutterDownloader.loadTasks();</span><br><span class="line">    tasks!.forEach((item) &#123;</span><br><span class="line">      <span class="keyword">if</span>(item.url == _task.link) &#123;</span><br><span class="line">        _task.taskId = item.taskId;</span><br><span class="line">        _task.status = item.status;</span><br><span class="line">        _task.progress = item.progress;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">await</span> _checkPermission()) &#123;</span><br><span class="line">      <span class="keyword">await</span> _prepareSaveDir();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载的回调</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> downloadCallback(</span><br><span class="line">      <span class="built_in">String</span> id, DownloadTaskStatus status, <span class="built_in">int</span> progress) &#123;</span><br><span class="line">    <span class="comment">// if (debug) &#123;</span></span><br><span class="line">    <span class="comment">//   print(</span></span><br><span class="line">    <span class="comment">//       &#x27;Background Isolate Callback: task ($id) is in status ($status) and process ($progress)&#x27;);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">final</span> SendPort send =</span><br><span class="line">    IsolateNameServer.lookupPortByName(<span class="string">&#x27;downloader_send_port&#x27;</span>)!;</span><br><span class="line">    send.send([id, status, progress]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">销毁前后台之间的通信</span></span></span><br><span class="line">  <span class="keyword">void</span> _unbindBackgroundIsolate() &#123;</span><br><span class="line">    IsolateNameServer.removePortNameMapping(<span class="string">&#x27;downloader_send_port&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">请求下载</span></span></span><br><span class="line">  <span class="keyword">void</span> _requestDownload(TaskInfo task) <span class="keyword">async</span> &#123;</span><br><span class="line">    task.taskId = <span class="keyword">await</span> FlutterDownloader.enqueue(</span><br><span class="line">      url: task.link!,</span><br><span class="line">      headers: &#123;<span class="string">&quot;auth&quot;</span>: <span class="string">&quot;test_for_sql_encoding&quot;</span>&#125;,</span><br><span class="line">      savedDir: _localPath,</span><br><span class="line">      showNotification: <span class="keyword">true</span>,</span><br><span class="line">      openFileFromNotification: <span class="keyword">true</span>,</span><br><span class="line">      saveInPublicStorage: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">重新下载</span></span></span><br><span class="line">  <span class="keyword">void</span> _retryDownload(TaskInfo task) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">String?</span> newTaskId = <span class="keyword">await</span> FlutterDownloader.retry(taskId: task.taskId!);</span><br><span class="line">    task.taskId = newTaskId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">打开文件</span></span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _openDownloadedFile(TaskInfo? task) &#123;</span><br><span class="line">    <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> FlutterDownloader.open(taskId: task.taskId!);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> Future.value(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _task = TaskInfo(link: <span class="string">&quot;<span class="subst">$&#123;Global.baseImageUrl&#125;</span><span class="subst">$&#123;widget.link&#125;</span>&quot;</span>);</span><br><span class="line">    _bindBackgroundIsolate();</span><br><span class="line"></span><br><span class="line">    FlutterDownloader.registerCallback(downloadCallback);</span><br><span class="line"></span><br><span class="line">    _prepare();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Row(</span><br><span class="line">      mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">      children: [</span><br><span class="line">        Container(</span><br><span class="line">          decoration: BoxDecoration(</span><br><span class="line">              color: <span class="keyword">const</span> Color(<span class="number">0xFFFF9F21</span>),</span><br><span class="line">              borderRadius: BorderRadius.circular(<span class="number">5.0</span>)</span><br><span class="line">          ),</span><br><span class="line">          padding: <span class="keyword">const</span> EdgeInsets.symmetric(horizontal: <span class="number">42.0</span>, vertical: <span class="number">5.0</span>),</span><br><span class="line">          child: <span class="keyword">const</span> Text(<span class="string">&#x27;付款请求书.pdf&#x27;</span>, style: TextStyle(color: Colors.white, fontSize: <span class="number">14.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">        TextButton(</span><br><span class="line">          style: TextButton.styleFrom(</span><br><span class="line">            padding: EdgeInsets.zero,</span><br><span class="line">            minimumSize: Size.zero,</span><br><span class="line">            tapTargetSize: MaterialTapTargetSize.shrinkWrap,</span><br><span class="line">          ),</span><br><span class="line">          onPressed: ()&#123;</span><br><span class="line"></span><br><span class="line">          &#125;,</span><br><span class="line">          child: _buildActionForTask(_task),</span><br><span class="line">        )</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget _buildActionForTask(TaskInfo task) &#123;</span><br><span class="line">    <span class="keyword">if</span>(task.status == DownloadTaskStatus.running) &#123;<span class="comment">/// <span class="language-markdown">下载中</span></span></span><br><span class="line">      <span class="keyword">return</span> CircularProgressIndicator(</span><br><span class="line">        value: task.progress! / <span class="number">100</span>,</span><br><span class="line">        backgroundColor: Colors.white,</span><br><span class="line">        valueColor: AlwaysStoppedAnimation&lt;Color&gt;(Color(<span class="number">0xFFFF9F21</span>)),</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(task.status == DownloadTaskStatus.failed) &#123;<span class="comment">/// <span class="language-markdown">下载失败</span></span></span><br><span class="line">      <span class="keyword">return</span> IconButton(</span><br><span class="line">          onPressed: () =&gt; _retryDownload(task),</span><br><span class="line">          icon: Icon(Icons.refresh_rounded, size: <span class="number">16.0</span>,)</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(task.status == DownloadTaskStatus.complete) &#123;</span><br><span class="line">      <span class="keyword">return</span> TextButton(</span><br><span class="line">          onPressed: () =&gt; _openDownloadedFile(task),</span><br><span class="line">          child: Text(<span class="string">&#x27;打开&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFFF9F21</span>), fontSize: <span class="number">14.0</span>))</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (task.status == DownloadTaskStatus.enqueued) &#123;<span class="comment">/// <span class="language-markdown">等待</span></span></span><br><span class="line">      <span class="keyword">return</span> CupertinoActivityIndicator();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TextButton(</span><br><span class="line">        onPressed: () =&gt; _retryDownload(task),</span><br><span class="line">        child: Text(<span class="string">&#x27;下载&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFFF9F21</span>), fontSize: <span class="number">14.0</span>))</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">自定义任务类型数据</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskInfo</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载链接</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> link;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String?</span> taskId;</span><br><span class="line">  <span class="built_in">int?</span> progress = <span class="number">0</span>;</span><br><span class="line">  DownloadTaskStatus? status = DownloadTaskStatus.undefined;</span><br><span class="line"></span><br><span class="line">  TaskInfo(&#123;<span class="keyword">this</span>.link&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:isolate&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:device_info_plus/device_info_plus.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter_downloader/flutter_downloader.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:path_provider/path_provider.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:permission_handler/permission_handler.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:ting_hui_wu_liu_user_app/global.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadFileWidget</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> DownloadFileWidget(&#123;<span class="keyword">required</span> <span class="keyword">this</span>.link, Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载链接</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> link;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _DownloadFileWidgetState createState() =&gt; _DownloadFileWidgetState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DownloadFileWidgetState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">DownloadFileWidget</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">当前的任务</span></span></span><br><span class="line">  <span class="keyword">late</span> TaskInfo _task;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">侦听器</span></span></span><br><span class="line">  ReceivePort _port = ReceivePort();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">保存路径</span></span></span><br><span class="line">  <span class="keyword">late</span> <span class="built_in">String</span> _localPath;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">绑定前台和后台之间的通信</span></span></span><br><span class="line">  <span class="keyword">void</span> _bindBackgroundIsolate() &#123;</span><br><span class="line">    <span class="built_in">bool</span> isSuccess = IsolateNameServer.registerPortWithName(</span><br><span class="line">        _port.sendPort, <span class="string">&#x27;downloader_send_port&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!isSuccess) &#123;</span><br><span class="line">      _unbindBackgroundIsolate();</span><br><span class="line">      _bindBackgroundIsolate();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _port.listen((<span class="built_in">dynamic</span> data) &#123;</span><br><span class="line">      <span class="comment">// if (debug) &#123;</span></span><br><span class="line">      <span class="comment">//   print(&#x27;UI Isolate Callback: $data&#x27;);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="built_in">String?</span> id = data[<span class="number">0</span>];</span><br><span class="line">      DownloadTaskStatus? status = data[<span class="number">1</span>];</span><br><span class="line">      <span class="built_in">int?</span> progress = data[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">      <span class="comment">// if (_tasks != null &amp;&amp; _tasks!.isNotEmpty) &#123;</span></span><br><span class="line">      <span class="comment">//   final task = _tasks!.firstWhere((task) =&gt; task.taskId == id);</span></span><br><span class="line">      <span class="comment">//   setState(() &#123;</span></span><br><span class="line">      <span class="comment">//     task.status = status;</span></span><br><span class="line">      <span class="comment">//     task.progress = progress;</span></span><br><span class="line">      <span class="comment">//   &#125;);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">检查权限</span></span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _checkPermission() <span class="keyword">async</span> &#123;</span><br><span class="line">    DeviceInfoPlugin deviceInfo = DeviceInfoPlugin();</span><br><span class="line">    AndroidDeviceInfo androidInfo = <span class="keyword">await</span> deviceInfo.androidInfo;</span><br><span class="line">    <span class="keyword">if</span> (Theme.of(context).platform == TargetPlatform.android &amp;&amp;</span><br><span class="line">        androidInfo.version.sdkInt! &lt;= <span class="number">28</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> status = <span class="keyword">await</span> Permission.storage.status;</span><br><span class="line">      <span class="keyword">if</span> (status != PermissionStatus.granted) &#123;</span><br><span class="line">        <span class="keyword">final</span> result = <span class="keyword">await</span> Permission.storage.request();</span><br><span class="line">        <span class="keyword">if</span> (result == PermissionStatus.granted) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">设置保存路径</span></span></span><br><span class="line">  Future&lt;<span class="built_in">String?</span>&gt; _findLocalPath() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> externalStorageDirPath;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isAndroid) &#123;</span><br><span class="line">      <span class="keyword">final</span> directory = <span class="keyword">await</span> getExternalStorageDirectory();</span><br><span class="line">      externalStorageDirPath = directory?.path;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Platform.isIOS) &#123;</span><br><span class="line">      externalStorageDirPath =</span><br><span class="line">          (<span class="keyword">await</span> getApplicationDocumentsDirectory()).absolute.path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// print(&#x27;externalStorageDirPath:\n$externalStorageDirPath&#x27;);</span></span><br><span class="line">    <span class="keyword">return</span> externalStorageDirPath;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _prepareSaveDir() <span class="keyword">async</span> &#123;</span><br><span class="line">    _localPath = (<span class="keyword">await</span> _findLocalPath())!;</span><br><span class="line">    <span class="keyword">final</span> savedDir = Directory(_localPath);</span><br><span class="line">    <span class="built_in">bool</span> hasExisted = <span class="keyword">await</span> savedDir.exists();</span><br><span class="line">    <span class="keyword">if</span> (!hasExisted) &#123;</span><br><span class="line">      savedDir.create();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">初始化存储路径，存储权限，获取本地所有任务信息</span></span></span><br><span class="line">  Future&lt;<span class="keyword">void</span>&gt; _prepare() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="comment">/// <span class="language-markdown">获取本地的所有任务信息</span></span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">List</span>&lt;DownloadTask&gt; ?tasks = <span class="keyword">await</span> FlutterDownloader.loadTasks();</span><br><span class="line">    tasks!.forEach((item) &#123;</span><br><span class="line">      <span class="keyword">if</span>(item.url == _task.link) &#123;</span><br><span class="line">        _task.taskId = item.taskId;</span><br><span class="line">        _task.status = item.status;</span><br><span class="line">        _task.progress = item.progress;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">await</span> _checkPermission()) &#123;</span><br><span class="line">      <span class="keyword">await</span> _prepareSaveDir();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载的回调</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> downloadCallback(</span><br><span class="line">      <span class="built_in">String</span> id, DownloadTaskStatus status, <span class="built_in">int</span> progress) &#123;</span><br><span class="line">    <span class="comment">// if (debug) &#123;</span></span><br><span class="line">    <span class="comment">//   print(</span></span><br><span class="line">    <span class="comment">//       &#x27;Background Isolate Callback: task ($id) is in status ($status) and process ($progress)&#x27;);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">final</span> SendPort send =</span><br><span class="line">    IsolateNameServer.lookupPortByName(<span class="string">&#x27;downloader_send_port&#x27;</span>)!;</span><br><span class="line">    send.send([id, status, progress]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">销毁前后台之间的通信</span></span></span><br><span class="line">  <span class="keyword">void</span> _unbindBackgroundIsolate() &#123;</span><br><span class="line">    IsolateNameServer.removePortNameMapping(<span class="string">&#x27;downloader_send_port&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">请求下载</span></span></span><br><span class="line">  <span class="keyword">void</span> _requestDownload(TaskInfo task) <span class="keyword">async</span> &#123;</span><br><span class="line">    task.taskId = <span class="keyword">await</span> FlutterDownloader.enqueue(</span><br><span class="line">      url: task.link!,</span><br><span class="line">      headers: &#123;<span class="string">&quot;auth&quot;</span>: <span class="string">&quot;test_for_sql_encoding&quot;</span>&#125;,</span><br><span class="line">      savedDir: _localPath,</span><br><span class="line">      showNotification: <span class="keyword">true</span>,</span><br><span class="line">      openFileFromNotification: <span class="keyword">true</span>,</span><br><span class="line">      saveInPublicStorage: <span class="keyword">true</span>,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">重新下载</span></span></span><br><span class="line">  <span class="keyword">void</span> _retryDownload(TaskInfo task) <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">String?</span> newTaskId = <span class="keyword">await</span> FlutterDownloader.retry(taskId: task.taskId!);</span><br><span class="line">    task.taskId = newTaskId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">打开文件</span></span></span><br><span class="line">  Future&lt;<span class="built_in">bool</span>&gt; _openDownloadedFile(TaskInfo? task) &#123;</span><br><span class="line">    <span class="keyword">if</span> (task != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> FlutterDownloader.open(taskId: task.taskId!);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> Future.value(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _task = TaskInfo(link: <span class="string">&quot;<span class="subst">$&#123;Global.baseImageUrl&#125;</span><span class="subst">$&#123;widget.link&#125;</span>&quot;</span>);</span><br><span class="line">    _bindBackgroundIsolate();</span><br><span class="line"></span><br><span class="line">    FlutterDownloader.registerCallback(downloadCallback);</span><br><span class="line"></span><br><span class="line">    _prepare();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Row(</span><br><span class="line">      mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">      children: [</span><br><span class="line">        Container(</span><br><span class="line">          decoration: BoxDecoration(</span><br><span class="line">              color: <span class="keyword">const</span> Color(<span class="number">0xFFFF9F21</span>),</span><br><span class="line">              borderRadius: BorderRadius.circular(<span class="number">5.0</span>)</span><br><span class="line">          ),</span><br><span class="line">          padding: <span class="keyword">const</span> EdgeInsets.symmetric(horizontal: <span class="number">42.0</span>, vertical: <span class="number">5.0</span>),</span><br><span class="line">          child: <span class="keyword">const</span> Text(<span class="string">&#x27;付款请求书.pdf&#x27;</span>, style: TextStyle(color: Colors.white, fontSize: <span class="number">14.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">        TextButton(</span><br><span class="line">          style: TextButton.styleFrom(</span><br><span class="line">            padding: EdgeInsets.zero,</span><br><span class="line">            minimumSize: Size.zero,</span><br><span class="line">            tapTargetSize: MaterialTapTargetSize.shrinkWrap,</span><br><span class="line">          ),</span><br><span class="line">          onPressed: ()&#123;</span><br><span class="line"></span><br><span class="line">          &#125;,</span><br><span class="line">          child: _buildActionForTask(_task),</span><br><span class="line">        )</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget _buildActionForTask(TaskInfo task) &#123;</span><br><span class="line">    <span class="keyword">if</span>(task.status == DownloadTaskStatus.running) &#123;<span class="comment">/// <span class="language-markdown">下载中</span></span></span><br><span class="line">      <span class="keyword">return</span> CircularProgressIndicator(</span><br><span class="line">        value: task.progress! / <span class="number">100</span>,</span><br><span class="line">        backgroundColor: Colors.white,</span><br><span class="line">        valueColor: AlwaysStoppedAnimation&lt;Color&gt;(Color(<span class="number">0xFFFF9F21</span>)),</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(task.status == DownloadTaskStatus.failed) &#123;<span class="comment">/// <span class="language-markdown">下载失败</span></span></span><br><span class="line">      <span class="keyword">return</span> IconButton(</span><br><span class="line">          onPressed: () =&gt; _retryDownload(task),</span><br><span class="line">          icon: Icon(Icons.refresh_rounded, size: <span class="number">16.0</span>,)</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(task.status == DownloadTaskStatus.complete) &#123;</span><br><span class="line">      <span class="keyword">return</span> TextButton(</span><br><span class="line">          onPressed: () =&gt; _openDownloadedFile(task),</span><br><span class="line">          child: Text(<span class="string">&#x27;打开&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFFF9F21</span>), fontSize: <span class="number">14.0</span>))</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (task.status == DownloadTaskStatus.enqueued) &#123;<span class="comment">/// <span class="language-markdown">等待</span></span></span><br><span class="line">      <span class="keyword">return</span> CupertinoActivityIndicator();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TextButton(</span><br><span class="line">        onPressed: () =&gt; _retryDownload(task),</span><br><span class="line">        child: Text(<span class="string">&#x27;下载&#x27;</span>, style: TextStyle(color: Color(<span class="number">0xFFFF9F21</span>), fontSize: <span class="number">14.0</span>))</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">自定义任务类型数据</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskInfo</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">下载链接</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> link;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String?</span> taskId;</span><br><span class="line">  <span class="built_in">int?</span> progress = <span class="number">0</span>;</span><br><span class="line">  DownloadTaskStatus? status = DownloadTaskStatus.undefined;</span><br><span class="line"></span><br><span class="line">  TaskInfo(&#123;<span class="keyword">this</span>.link&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="51-WidgetSpan"><a href="#51-WidgetSpan" class="headerlink" title="51.WidgetSpan"></a>51.WidgetSpan</h2><p>在文本中内嵌固定大小 Widget。</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">RichText(</span><br><span class="line">          text: TextSpan(</span><br><span class="line">              children: [</span><br><span class="line">                WidgetSpan(</span><br><span class="line">                  child: Image.asset(</span><br><span class="line">                    <span class="string">&#x27;<span class="subst">$&#123;_currIndex == index ? <span class="string">&#x27;btn_login_choose_s&#x27;</span> : <span class="string">&#x27;btn_login_choose_d&#x27;</span>&#125;</span>&#x27;</span>.webp,</span><br><span class="line">                    width: <span class="number">18.0</span>,</span><br><span class="line">                    height: <span class="number">18.0</span>,</span><br><span class="line">                    fit: BoxFit.cover,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">                WidgetSpan(</span><br><span class="line">                  child: Padding(</span><br><span class="line">                    padding: EdgeInsets.only(left: <span class="number">5.0</span>),</span><br><span class="line">                    child: Text(<span class="string">&#x27;<span class="subst">$&#123;widget.group[index]&#125;</span>&#x27;</span>.i18n, style: TextStyle(fontSize: <span class="number">14.0</span>),),</span><br><span class="line">                  ),</span><br><span class="line">                )</span><br><span class="line">              ]</span><br><span class="line">          ),</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></div>

<h2 id="52-打开-google-应用的相关-api"><a href="#52-打开-google-应用的相关-api" class="headerlink" title="52.打开 google 应用的相关 api"></a>52.<a class="link"   href="https://developers.google.com/maps/documentation/urls/get-started?hl=zh-CN" >打开 google 应用的相关 api <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h2 id="53-聚焦"><a href="#53-聚焦" class="headerlink" title="53.聚焦"></a>53.聚焦</h2><p>关于焦点事件：<a class="link"   href="https://www.freesion.com/article/4272635917/" >https://www.freesion.com/article/4272635917/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">///<span class="language-markdown">输入框的焦点</span></span></span><br><span class="line">FocusNode _focusNode = FocusNode();</span><br><span class="line">FocusScope.of(context).requestFocus(FocusNode());</span><br></pre></td></tr></table></figure></div>

<h2 id="54-Flutter-文本输入框-TextField-属性"><a href="#54-Flutter-文本输入框-TextField-属性" class="headerlink" title="54.Flutter 文本输入框 TextField 属性"></a>54.<a class="link"   href="https://blog.csdn.net/yuzhiqiang_1993/article/details/88204031" >Flutter 文本输入框 TextField 属性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h2 id="57-下拉刷新，上滑加载"><a href="#57-下拉刷新，上滑加载" class="headerlink" title="57.下拉刷新，上滑加载"></a>57.下拉刷新，上滑加载</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/cupertino.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:pull_to_refresh/pull_to_refresh.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:ting_hui_wu_liu_user_app/models/model.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">自定义下拉刷新</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PullDownRefresh</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> PullDownRefresh(&#123;<span class="keyword">required</span> <span class="keyword">this</span>.controller, <span class="keyword">required</span> <span class="keyword">this</span>.future, <span class="keyword">required</span> <span class="keyword">this</span>.pageable, <span class="keyword">required</span> <span class="keyword">this</span>.builder, <span class="keyword">this</span>.noDataText, <span class="keyword">this</span>.noMoreDataText, Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> Future&lt;T&gt; <span class="built_in">Function</span>(Pageable pageable) future;</span><br><span class="line">  <span class="keyword">final</span> Widget <span class="built_in">Function</span>(BuildContext context, T value) builder;</span><br><span class="line">  <span class="keyword">final</span> RefreshController controller;</span><br><span class="line">  <span class="keyword">final</span> Pageable pageable;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">没有更多的数据</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> noMoreDataText;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">没有数据</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> noDataText;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _PullDownRefreshState&lt;T&gt; createState() =&gt; _PullDownRefreshState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_PullDownRefreshState</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">PullDownRefresh</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">数据</span></span></span><br><span class="line">  T? list;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">列表是否为空</span></span></span><br><span class="line">  <span class="built_in">bool</span> isNoData = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">bool</span> enableLoad = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> err = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _handleError(<span class="built_in">dynamic</span> e)&#123;</span><br><span class="line">    <span class="built_in">String?</span> message;</span><br><span class="line">    widget.controller.refreshFailed();</span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">is</span> SocketException) &#123;</span><br><span class="line">      message = <span class="string">&#x27;network.error&#x27;</span>.i18n;</span><br><span class="line">      logger.e(message, e);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">is</span> RpcCallException) &#123;</span><br><span class="line">      <span class="keyword">if</span> (e.code == <span class="number">401</span>) &#123;</span><br><span class="line">        Nav.login();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(e.code == <span class="number">600</span>) &#123;</span><br><span class="line">        <span class="built_in">String</span> language = LocalStorage.getLocale()?.languageCode ?? <span class="string">&#x27;zh&#x27;</span>;</span><br><span class="line">        message = e.fault?.variables[language];</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        message = e.message.i18n;</span><br><span class="line">        logger.e(message, e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">is</span> HttpCallException) &#123;</span><br><span class="line">      message = <span class="string">&#x27;http.error&#x27;</span>.i18n;</span><br><span class="line">      logger.e(message, e);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">is</span> TimeoutException) &#123;</span><br><span class="line">      message = <span class="string">&#x27;request.timeout&#x27;</span>.i18n;</span><br><span class="line">      logger.e(message, e);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      message = <span class="string">&#x27;request.error&#x27;</span>.i18n;</span><br><span class="line">      logger.e(message, e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (message != <span class="keyword">null</span>) &#123;</span><br><span class="line">      err = message;</span><br><span class="line">      Chili.showToast(message);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> SmartRefresher(</span><br><span class="line">      controller: widget.controller,</span><br><span class="line">      enablePullDown: <span class="keyword">true</span>,</span><br><span class="line">      enablePullUp: enableLoad,</span><br><span class="line">      header: WaterDropMaterialHeader(</span><br><span class="line">        color: Color(<span class="number">0xFFFF9F21</span>),</span><br><span class="line">      ),</span><br><span class="line">      footer: ClassicFooter(</span><br><span class="line">        noDataText: widget.noMoreDataText ?? <span class="string">&quot;--没有更多的数据--&quot;</span>,</span><br><span class="line">        loadingIcon: CupertinoActivityIndicator(),</span><br><span class="line">      ),</span><br><span class="line">      onRefresh: () &#123;</span><br><span class="line">        widget.controller.loadComplete();</span><br><span class="line">        err = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        widget.pageable.page = <span class="number">1</span>;</span><br><span class="line">        widget.future(widget.pageable).then((value) &#123;</span><br><span class="line">          list = value;</span><br><span class="line">          widget.controller.refreshCompleted();</span><br><span class="line">          <span class="keyword">if</span>(mounted) &#123;</span><br><span class="line">            setState(() &#123;</span><br><span class="line">              <span class="keyword">if</span> ((list <span class="keyword">as</span> <span class="built_in">List</span>).isEmpty) &#123;</span><br><span class="line">                isNoData = <span class="keyword">true</span>;</span><br><span class="line">                enableLoad = <span class="keyword">false</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                isNoData = <span class="keyword">false</span>;</span><br><span class="line">                enableLoad = <span class="keyword">true</span>;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;).catchError((e) &#123;</span><br><span class="line">         _handleError(e);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      onLoading: () &#123;</span><br><span class="line">        widget.pageable.page = widget.pageable.page! + <span class="number">1</span>;</span><br><span class="line">        widget.future(widget.pageable).then((value) &#123;</span><br><span class="line">          <span class="keyword">if</span> ((value <span class="keyword">as</span> <span class="built_in">List</span>).isEmpty) &#123;</span><br><span class="line">            widget.controller.loadNoData();</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(mounted) setState(() &#123;(list <span class="keyword">as</span> <span class="built_in">List</span>).addAll(value);&#125;);</span><br><span class="line">            widget.controller.loadComplete();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;).catchError((err) &#123;</span><br><span class="line">          _handleError(err);</span><br><span class="line">          widget.controller.loadFailed();</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      child: isNoData ? Center(</span><br><span class="line">        child: Text(</span><br><span class="line">          err.isNotEmpty ? err : (widget.noDataText ?? <span class="string">&#x27;暂无数据&#x27;</span>),</span><br><span class="line">          style: TextStyle(color: Color(<span class="number">0xFFBFBFBF</span>)),</span><br><span class="line">        ),</span><br><span class="line">      ) : widget.builder(context, list!)</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="IntrinsicHeight"><a href="#IntrinsicHeight" class="headerlink" title="IntrinsicHeight"></a><a class="link"   href="http://laomengit.com/flutter/widgets/IntrinsicHeight.html" >IntrinsicHeight <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><p>将其子控件调整为该子控件的固有高度，举个例子来说，Row 中有 3 个子控件，其中只有一个有高度，默认情况下剩余 2 个控件将会充满父组件，而使用 IntrinsicHeight 控件，则 3 个子控件的高度一致。</p>
<h2 id="文字折叠"><a href="#文字折叠" class="headerlink" title="文字折叠"></a>文字折叠</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextWrapper</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> TextWrapper(<span class="keyword">this</span>.text, &#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> text;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;TextWrapper&gt; createState() =&gt; _TextWrapperState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_TextWrapperState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">TextWrapper</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">with</span> <span class="title">TickerProviderStateMixin</span> </span>&#123;</span><br><span class="line">  <span class="built_in">bool</span> isExpanded = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Column(</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">      children: [</span><br><span class="line">        AnimatedSize(</span><br><span class="line">          vsync: <span class="keyword">this</span>,</span><br><span class="line">          duration: <span class="built_in">Duration</span>(microseconds: <span class="number">300</span>),</span><br><span class="line">          child: ConstrainedBox(</span><br><span class="line">            constraints:</span><br><span class="line">                isExpanded ? BoxConstraints() : BoxConstraints(maxHeight: <span class="number">70</span>),</span><br><span class="line">            child: Text(</span><br><span class="line">              widget.text,</span><br><span class="line">              style: TextStyle(fontSize: <span class="number">16</span>),</span><br><span class="line">              softWrap: <span class="keyword">true</span>,</span><br><span class="line">              overflow: TextOverflow.fade,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        isExpanded</span><br><span class="line">            ? Row(</span><br><span class="line">                <span class="comment">// 使用 Row 将 btn 显示在右边，如果不使用 Row，btn 就会显示在左边</span></span><br><span class="line">                mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">                children: [</span><br><span class="line">                  OutlinedButton(</span><br><span class="line">                      onPressed: () &#123;</span><br><span class="line">                        setState(() &#123;</span><br><span class="line">                          isExpanded = <span class="keyword">false</span>;</span><br><span class="line">                        &#125;);</span><br><span class="line">                      &#125;,</span><br><span class="line">                      child: Text(<span class="string">&quot;隐藏&quot;</span>))</span><br><span class="line">                ],</span><br><span class="line">              )</span><br><span class="line">            : OutlinedButton(</span><br><span class="line">                onPressed: () &#123;</span><br><span class="line">                  setState(() &#123;</span><br><span class="line">                    isExpanded = <span class="keyword">true</span>;</span><br><span class="line">                  &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                child: Text(<span class="string">&quot;显示&quot;</span>))</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextWrapperPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> TextWrapperPage(&#123;Key? key&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">&quot;显示/折叠&quot;</span>),</span><br><span class="line">        centerTitle: <span class="keyword">true</span>,</span><br><span class="line">        backgroundColor: Colors.blue,</span><br><span class="line">      ),</span><br><span class="line">      body: Padding(</span><br><span class="line">          padding: EdgeInsets.symmetric(vertical: <span class="number">30</span>, horizontal: <span class="number">20</span>),</span><br><span class="line">          child: SingleChildScrollView(</span><br><span class="line">            child: Column(</span><br><span class="line">              children: [</span><br><span class="line">                TextWrapper(</span><br><span class="line">                    <span class="string">&quot;【摘要】 食品安全问题关系国计民生,一直是社会各界广泛关注的焦点。基于政策法规、主流期刊、权威媒体的三维视角,首先从\&quot;是什么\&quot;的角度对改革开放四十年以来我国食品安全问题关注重点的变化进行了系统梳理,总体上,我国食品安全问题关注重点的变化轨迹可描绘为\&quot;食品数量安全→食品数量和卫生安全→食品质量安全→食品质量和营养安全\&quot;;其次进一步从\&quot;为什么\&quot;的角度剖析不同历史阶段我国食品安全问题关注重点变迁的内在逻辑,揭示导致以上变化的主要驱动因素;最后总结改革开放以来我国食品安全领域的重要成就,指明我国食品安全问题的发展方向。 &quot;</span>),</span><br><span class="line">                Divider(</span><br><span class="line">                  height: <span class="number">30</span>,</span><br><span class="line">                ),</span><br><span class="line">                TextWrapper(</span><br><span class="line">                    <span class="string">&quot;【摘要】 食品安全问题关系国计民生,一直是社会各界广泛关注的焦点。基于政策法规、主流期刊、权威媒体的三维视角,首先从\&quot;是什么\&quot;的角度对改革开放四十年以来我国食品安全问题关注重点的变化进行了系统梳理,总体上,我国食品安全问题关注重点的变化轨迹可描绘为\&quot;食品数量安全→食品数量和卫生安全→食品质量安全→食品质量和营养安全\&quot;;其次进一步从\&quot;为什么\&quot;的角度剖析不同历史阶段我国食品安全问题关注重点变迁的内在逻辑,揭示导致以上变化的主要驱动因素;最后总结改革开放以来我国食品安全领域的重要成就,指明我国食品安全问题的发展方向。 &quot;</span>),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          )),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="58-简单的单例模式写法"><a href="#58-简单的单例模式写法" class="headerlink" title="58.简单的单例模式写法"></a>58.简单的单例模式写法</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestEventBust</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> TestEventBust _instance = TestEventBust._init();</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">命名构造函数</span></span></span><br><span class="line">  TestEventBust._init();</span><br><span class="line">  EventBus _eventBus = EventBus();</span><br><span class="line">  EventBus <span class="keyword">get</span> bus&#123;</span><br><span class="line">    <span class="keyword">return</span> _eventBus;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">工厂构造函数</span></span></span><br><span class="line">  <span class="keyword">factory</span> TestEventBust() =&gt; _instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="50-BackdropFilter-高斯模糊-毛玻璃效果"><a href="#50-BackdropFilter-高斯模糊-毛玻璃效果" class="headerlink" title="50.BackdropFilter 高斯模糊&#x2F;毛玻璃效果"></a>50.BackdropFilter 高斯模糊&#x2F;毛玻璃效果</h2><p>Flutter 自带的一个 ui 组件。</p>
<p>注意点：<br>官方文档：The filter will be applied to all the area within its parent or ancestor widget’s clip. If there’s no clip, the filter will be applied to the full screen.</p>
<p>译：过滤器将应用于其父控件或祖先控件剪辑中的所有区域。如果没有剪辑，过滤器将应用于全屏。</p>
<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">Stack(</span><br><span class="line">  fit: StackFit.expand,</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Text(<span class="string">&#x27;0&#x27;</span> * <span class="number">10000</span>),</span><br><span class="line">    Center(</span><br><span class="line">      child: ClipRect(  <span class="comment">// &lt;-- clips to the 200x200 [Container] below</span></span><br><span class="line">        child: BackdropFilter(</span><br><span class="line">          filter: ui.ImageFilter.blur(</span><br><span class="line">            sigmaX: <span class="number">5.0</span>,</span><br><span class="line">            sigmaY: <span class="number">5.0</span>,</span><br><span class="line">          ),</span><br><span class="line">          child: Container(</span><br><span class="line">            alignment: Alignment.center,</span><br><span class="line">            width: <span class="number">200.0</span>,</span><br><span class="line">            height: <span class="number">200.0</span>,</span><br><span class="line">            child: <span class="keyword">const</span> Text(<span class="string">&#x27;Hello World&#x27;</span>),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<h2 id="51-显示-SVG-格式的-Flutter-组件：flutter-svg"><a href="#51-显示-SVG-格式的-Flutter-组件：flutter-svg" class="headerlink" title="51.显示 SVG 格式的 Flutter 组件：flutter_svg"></a>51.显示 SVG 格式的 Flutter 组件：flutter_svg</h2><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line">ListView.builder(</span><br><span class="line">           shrinkWrap: <span class="keyword">true</span>,</span><br><span class="line">             scrollDirection: Axis.vertical,</span><br><span class="line">             itemCount: countries.length,</span><br><span class="line">             physics: ScrollPhysics(),</span><br><span class="line">             itemBuilder: (context, index)&#123;</span><br><span class="line">               <span class="keyword">final</span> Widget networkSvg = SvgPicture.network(</span><br><span class="line">                   <span class="string">&#x27;<span class="subst">$&#123;countries[index].flag&#125;</span>&#x27;</span>,</span><br><span class="line">                   fit: BoxFit.fill,</span><br><span class="line">                   semanticsLabel: <span class="string">&#x27;A shark?!&#x27;</span>,</span><br><span class="line">                   placeholderBuilder: (BuildContext context) =&gt; Container(</span><br><span class="line">                       padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">30.0</span>),</span><br><span class="line">                       child: <span class="keyword">const</span> CircularProgressIndicator(</span><br><span class="line">                         backgroundColor: Colors.redAccent,</span><br><span class="line">                       )),);</span><br><span class="line">               <span class="keyword">return</span></span><br><span class="line">                 Column(</span><br><span class="line">                   children: [</span><br><span class="line">                     ListTile(</span><br><span class="line">                       title: Text(<span class="string">&#x27;<span class="subst">$&#123;countries[index].name&#125;</span>&#x27;</span>),</span><br><span class="line">                       leading: CircleAvatar(</span><br><span class="line">                         backgroundColor: Colors.white,</span><br><span class="line">                         child: networkSvg,</span><br><span class="line">                       ),</span><br><span class="line">                     )</span><br><span class="line">                   ],</span><br><span class="line">                 );</span><br><span class="line">             &#125;);</span><br></pre></td></tr></table></figure></div>

<h2 id="Flutter-shape"><a href="#Flutter-shape" class="headerlink" title="Flutter shape"></a>Flutter shape</h2><p>新了解：shapeDecoration</p>
<p><a class="link"   href="https://blog.csdn.net/chenlove1/article/details/83627831" >关于形状 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1 id="通过屏幕密度选择对应尺寸的图片"><a href="#通过屏幕密度选择对应尺寸的图片" class="headerlink" title="通过屏幕密度选择对应尺寸的图片"></a>通过屏幕密度选择对应尺寸的图片</h1><div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:ui&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:chili/chili.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;main_screen.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntroScreen</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="built_in">double</span> dpi = MediaQueryData.fromWindow(<span class="built_in">window</span>).devicePixelRatio; <span class="comment">//屏幕密度</span></span><br><span class="line">    <span class="built_in">String</span> prefix = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">final</span> imgWidth = MediaQuery.of(context).size.width;</span><br><span class="line">    <span class="keyword">if</span> (dpi &lt; <span class="number">1.5</span>) &#123;</span><br><span class="line">      prefix = <span class="string">&quot;assets/intro/small&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dpi &lt; <span class="number">2</span>) &#123;</span><br><span class="line">      prefix = <span class="string">&quot;assets/intro/medium&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      prefix = <span class="string">&quot;assets/intro/large&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; pages = [</span><br><span class="line">      Image.asset(</span><br><span class="line">        <span class="string">&#x27;<span class="subst">$prefix</span>/1.png&#x27;</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">      ),</span><br><span class="line">      Image.asset(</span><br><span class="line">        <span class="string">&#x27;<span class="subst">$prefix</span>/2.png&#x27;</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">      ),</span><br><span class="line">      Image.asset(</span><br><span class="line">        <span class="string">&#x27;<span class="subst">$prefix</span>/3.png&#x27;</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">      ),</span><br><span class="line">      Image.asset(</span><br><span class="line">        <span class="string">&#x27;<span class="subst">$prefix</span>/4.png&#x27;</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">      ),</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> Introduction(</span><br><span class="line">      onSkip: () &#123;</span><br><span class="line">        Nav.pushReplacement((context) =&gt; MainScreen());</span><br><span class="line">      &#125;,</span><br><span class="line">      pages: pages,</span><br><span class="line">      next: Text(<span class="string">&#x27;Next&#x27;</span>),</span><br><span class="line">      skip: Text(<span class="string">&#x27;Skip&#x27;</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Dart"><figure class="iseeu highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> init() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;当前的屏幕密度为:<span class="subst">$dpi</span>&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (platform == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当前设备为Android&quot;</span>);</span><br><span class="line">    postfix = <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (dpi &lt; <span class="number">1</span>) &#123;</span><br><span class="line">      basePath = Local_Icon_prefix + <span class="string">&quot;android/mdpi/&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dpi &lt; <span class="number">1.5</span>) &#123;</span><br><span class="line">      basePath = Local_Icon_prefix + <span class="string">&quot;android/hdpi/&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dpi &lt; <span class="number">2</span>) &#123;</span><br><span class="line">      basePath = Local_Icon_prefix + <span class="string">&quot;android/xhdpi/&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dpi &lt; <span class="number">3</span>) &#123;</span><br><span class="line">      basePath = Local_Icon_prefix + <span class="string">&quot;android/xxhdpi/&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      basePath = Local_Icon_prefix + <span class="string">&quot;android/xxxhdpi/&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    basePath = Local_Icon_prefix + <span class="string">&quot;ios/&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (dpi &lt; <span class="number">2.5</span>) &#123;</span><br><span class="line">      postfix = <span class="string">&quot;@2x.png&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      postfix = <span class="string">&quot;@3x.png&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(basePath);</span><br><span class="line">  <span class="keyword">return</span> basePath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
</search>
